{"version":3,"file":"310-8554fce9c109e04a2a3a.js","mappings":"6FAOG,SAAUA,GACX,aAiBA,SAASC,EAAMC,GACTA,EAAGC,MAAMC,QAAQF,EAAGC,MAAMC,OAAOH,QACjCC,EAAGC,MAAME,UAAUH,EAAGC,MAAME,SAASJ,QACzCC,EAAGC,MAAMC,OAASF,EAAGC,MAAME,SAAW,IACxC,CAEA,SAASC,EAAYJ,GACnBA,EAAGC,MAAMI,gBAAiB,EAC1BL,EAAGM,WAAU,WAEX,GADAP,EAAMC,IACFA,EAAGO,oBAAP,CACA,IAAIC,EAAMR,EAAGS,YACTC,EAAQV,EAAGW,cACfD,EAAME,KAAOC,KAAKC,IAAIJ,EAAME,KAAMJ,EAAIO,MACtCL,EAAMM,GAAKH,KAAKI,IAAIT,EAAIO,KAAO,EAAGL,EAAMM,IACxC,IAAIE,EAAQpB,EAAWqB,gBAAgBnB,EAAIQ,EAAKE,GAChD,GAAKQ,EAAL,CAEA,GAAIlB,EAAGC,MAAMmB,cAAe,CAC1B,IAAIC,EAAkB,QAAZH,EAAMI,GAAeJ,EAAMK,KAAOL,EAAMM,MAC9CH,IAAKrB,EAAGC,MAAMC,OAASF,EAAGyB,SAASJ,EAAIT,KAAMS,EAAIL,GAAI,CACvDU,UAAW,2BAEf,CAEA,IAAIC,EAAoB,SAAZT,EAAMI,GAAgBJ,EAAMK,KAAOL,EAAMM,MACjDG,EAAO3B,EAAGC,MAAME,SAAWH,EAAGyB,SAASE,EAAMf,KAAMe,EAAMX,GAAI,CAC/DU,UAAW,2BACL1B,EAAGC,MAAMI,gBAAiB,CAZhB,CANgB,CAmBpC,GACF,CAEA,SAASuB,EAAiB5B,GACpBA,EAAGC,MAAMI,gBAAgBD,EAAYJ,EAC3C,CAjDAF,EAAW+B,aAAa,aAAa,GAAO,SAAU7B,EAAI8B,EAAKC,GACzDA,GAAOA,GAAOjC,EAAWkC,OAC3BhC,EAAGiC,IAAI,iBAAkB7B,GACzBJ,EAAGiC,IAAI,iBAAkBL,GACzB7B,EAAMC,IAGJ8B,IACF9B,EAAGC,MAAMmB,cAA8B,iBAAPU,GAAmBA,EAAII,SACvDlC,EAAGmC,GAAG,iBAAkB/B,GACxBJ,EAAGmC,GAAG,iBAAkBP,GACxBxB,EAAYJ,GAEhB,IAsCAF,EAAWsC,SAASC,cAAgB,SAAUrC,GAC5C,IAAIsC,EAAQxC,EAAWqB,gBAAgBnB,EAAIA,EAAGS,aAE9C,GAAI6B,EAAO,CACT,IAAIX,EAAoB,SAAZW,EAAMhB,GAAgBgB,EAAMf,KAAOe,EAAMd,MACjDG,GAAO3B,EAAGuC,gBAAgBZ,EAAMX,GAAIW,EAAMf,KAChD,CACF,CACF,CAjEI4B,CAAI,EAAQ,MAAyB,EAAQ,M","sources":["webpack://web-docs/./node_modules/codemirror/addon/edit/matchtags.js"],"sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../fold/xml-fold\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../fold/xml-fold\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineOption(\"matchTags\", false, function (cm, val, old) {\n    if (old && old != CodeMirror.Init) {\n      cm.off(\"cursorActivity\", doMatchTags);\n      cm.off(\"viewportChange\", maybeUpdateMatch);\n      clear(cm);\n    }\n\n    if (val) {\n      cm.state.matchBothTags = typeof val == \"object\" && val.bothTags;\n      cm.on(\"cursorActivity\", doMatchTags);\n      cm.on(\"viewportChange\", maybeUpdateMatch);\n      doMatchTags(cm);\n    }\n  });\n\n  function clear(cm) {\n    if (cm.state.tagHit) cm.state.tagHit.clear();\n    if (cm.state.tagOther) cm.state.tagOther.clear();\n    cm.state.tagHit = cm.state.tagOther = null;\n  }\n\n  function doMatchTags(cm) {\n    cm.state.failedTagMatch = false;\n    cm.operation(function () {\n      clear(cm);\n      if (cm.somethingSelected()) return;\n      var cur = cm.getCursor(),\n          range = cm.getViewport();\n      range.from = Math.min(range.from, cur.line);\n      range.to = Math.max(cur.line + 1, range.to);\n      var match = CodeMirror.findMatchingTag(cm, cur, range);\n      if (!match) return;\n\n      if (cm.state.matchBothTags) {\n        var hit = match.at == \"open\" ? match.open : match.close;\n        if (hit) cm.state.tagHit = cm.markText(hit.from, hit.to, {\n          className: \"CodeMirror-matchingtag\"\n        });\n      }\n\n      var other = match.at == \"close\" ? match.open : match.close;\n      if (other) cm.state.tagOther = cm.markText(other.from, other.to, {\n        className: \"CodeMirror-matchingtag\"\n      });else cm.state.failedTagMatch = true;\n    });\n  }\n\n  function maybeUpdateMatch(cm) {\n    if (cm.state.failedTagMatch) doMatchTags(cm);\n  }\n\n  CodeMirror.commands.toMatchingTag = function (cm) {\n    var found = CodeMirror.findMatchingTag(cm, cm.getCursor());\n\n    if (found) {\n      var other = found.at == \"close\" ? found.open : found.close;\n      if (other) cm.extendSelection(other.to, other.from);\n    }\n  };\n});"],"names":["CodeMirror","clear","cm","state","tagHit","tagOther","doMatchTags","failedTagMatch","operation","somethingSelected","cur","getCursor","range","getViewport","from","Math","min","line","to","max","match","findMatchingTag","matchBothTags","hit","at","open","close","markText","className","other","maybeUpdateMatch","defineOption","val","old","Init","off","bothTags","on","commands","toMatchingTag","found","extendSelection","mod"],"sourceRoot":""}