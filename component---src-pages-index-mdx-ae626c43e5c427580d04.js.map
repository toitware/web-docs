{"version":3,"file":"component---src-pages-index-mdx-ae626c43e5c427580d04.js","mappings":"wPAQaA,EAAe,CAAC,EAEvBC,EAAgBC,GAAQ,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,aAAeH,EAAO,4EAC5B,eAASC,EACjB,EAEKG,EAAQL,EAAc,SACtBM,EAAQN,EAAc,SACtBO,EAAMP,EAAc,OACpBQ,EAAc,CAClBT,gBAEIU,EAAYC,EAAAA,QACH,SAASC,EAAT,GAGX,IAH+B,WACjCC,GAEC,EADEV,GACF,YACD,OAAO,SAACO,EAAD,iBAAeD,EAAiBN,EAAhC,CAAuCU,WAAYA,EAAYC,QAAQ,eAG5E,SAACR,EAAD,CAAOQ,QAAQ,SAAf,kBACA,SAACP,EAAD,CAAOO,QAAQ,UACb,SAACN,EAAD,CAAKO,MAAM,cAAcC,GAAG,cAAcF,QAAQ,QAChD,kBAAK,yJAGP,SAACN,EAAD,CAAKO,MAAM,YAAYC,GAAG,aAAaF,QAAQ,QAC7C,kBAAK,mLAGP,SAACN,EAAD,CAAKO,MAAM,cAAcC,GAAG,eAAeF,QAAQ,QACjD,kBAAK,kGAEP,SAACN,EAAD,CAAKO,MAAM,WAAWC,GAAG,YAAYF,QAAQ,QAC3C,kBAAK,0LAGP,SAACN,EAAD,CAAKO,MAAM,UAAUC,GAAG,WAAWF,QAAQ,QACzC,kBAAK,+IAKZ,CAEDF,EAAWK,gBAAiB,C,mECrDb,SAASC,EAAyBC,EAAQC,GACvD,GAAc,MAAVD,EAAgB,MAAO,CAAC,EAC5B,IACIE,EAAKC,EADLC,GAAS,OAA6BJ,EAAQC,GAGlD,GAAII,OAAOC,sBAAuB,CAChC,IAAIC,EAAmBF,OAAOC,sBAAsBN,GAEpD,IAAKG,EAAI,EAAGA,EAAII,EAAiBC,OAAQL,IACvCD,EAAMK,EAAiBJ,GACnBF,EAASQ,QAAQP,IAAQ,GACxBG,OAAOK,UAAUC,qBAAqBC,KAAKZ,EAAQE,KACxDE,EAAOF,GAAOF,EAAOE,GAEzB,CAEA,OAAOE,CACT,C","sources":["webpack://web-docs/./src/pages/index.mdx","webpack://web-docs/./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/web-docs/web-docs/src/components/layout/MdxLayout.tsx\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Title = makeShortcode(\"Title\");\nconst Boxes = makeShortcode(\"Boxes\");\nconst Box = makeShortcode(\"Box\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <Title mdxType=\"Title\">Documentation</Title>\n    <Boxes mdxType=\"Boxes\">\n      <Box title=\"Get started\" to=\"/getstarted\" mdxType=\"Box\">\n        <p>{`Start with the basic steps of installing Toit, setting up your ESP32 with\nthe Toit firmware, and deploying a Toit app on your device over-the-air.`}</p>\n      </Box>\n      <Box title=\"Tutorials\" to=\"/tutorials\" mdxType=\"Box\">\n        <p>{`Browse through the tutorials to learn how devices talk to each other in Toit,\nand see how to use the different communication mechanisms on your ESP32, such as MQTT and BLE.`}</p>\n      </Box>\n      <Box title=\"Peripherals\" to=\"/peripherals\" mdxType=\"Box\">\n        <p>{`Explore how to work with GPIO in Toit as well as the various peripherals that Toit supports.`}</p>\n      </Box>\n      <Box title=\"Language\" to=\"/language\" mdxType=\"Box\">\n        <p>{`Take the language tour and learn the Toit programming language tailored for embedded devices.\nLearn how to adapt Toit packages in your code by utilizing the Toit package registry.`}</p>\n      </Box>\n      <Box title=\"Support\" to=\"/support\" mdxType=\"Box\">\n        <p>{`Support contains a troubleshooting guide, but also links to get in touch with the Toit engineers, if you have any questions or need help.`}</p>\n      </Box>\n    </Boxes>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}"],"names":["_frontmatter","makeShortcode","name","props","console","warn","Title","Boxes","Box","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","title","to","isMDXComponent","_objectWithoutProperties","source","excluded","key","i","target","Object","getOwnPropertySymbols","sourceSymbolKeys","length","indexOf","prototype","propertyIsEnumerable","call"],"sourceRoot":""}