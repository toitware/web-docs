{"version":3,"file":"385-4faac84282961044576e.js","mappings":"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","sources":["webpack://web-docs/./node_modules/codemirror/mode/htmlmixed/htmlmixed.js"],"sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../xml/xml\"), require(\"../javascript/javascript\"), require(\"../css/css\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../xml/xml\", \"../javascript/javascript\", \"../css/css\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  var defaultTags = {\n    script: [[\"lang\", /(javascript|babel)/i, \"javascript\"], [\"type\", /^(?:text|application)\\/(?:x-)?(?:java|ecma)script$|^module$|^$/i, \"javascript\"], [\"type\", /./, \"text/plain\"], [null, null, \"javascript\"]],\n    style: [[\"lang\", /^css$/i, \"css\"], [\"type\", /^(text\\/)?(x-)?(stylesheet|css)$/i, \"css\"], [\"type\", /./, \"text/plain\"], [null, null, \"css\"]]\n  };\n\n  function maybeBackup(stream, pat, style) {\n    var cur = stream.current(),\n        close = cur.search(pat);\n\n    if (close > -1) {\n      stream.backUp(cur.length - close);\n    } else if (cur.match(/<\\/?$/)) {\n      stream.backUp(cur.length);\n      if (!stream.match(pat, false)) stream.match(cur);\n    }\n\n    return style;\n  }\n\n  var attrRegexpCache = {};\n\n  function getAttrRegexp(attr) {\n    var regexp = attrRegexpCache[attr];\n    if (regexp) return regexp;\n    return attrRegexpCache[attr] = new RegExp(\"\\\\s+\" + attr + \"\\\\s*=\\\\s*('|\\\")?([^'\\\"]+)('|\\\")?\\\\s*\");\n  }\n\n  function getAttrValue(text, attr) {\n    var match = text.match(getAttrRegexp(attr));\n    return match ? /^\\s*(.*?)\\s*$/.exec(match[2])[1] : \"\";\n  }\n\n  function getTagRegexp(tagName, anchored) {\n    return new RegExp((anchored ? \"^\" : \"\") + \"<\\/\\\\s*\" + tagName + \"\\\\s*>\", \"i\");\n  }\n\n  function addTags(from, to) {\n    for (var tag in from) {\n      var dest = to[tag] || (to[tag] = []);\n      var source = from[tag];\n\n      for (var i = source.length - 1; i >= 0; i--) dest.unshift(source[i]);\n    }\n  }\n\n  function findMatchingMode(tagInfo, tagText) {\n    for (var i = 0; i < tagInfo.length; i++) {\n      var spec = tagInfo[i];\n      if (!spec[0] || spec[1].test(getAttrValue(tagText, spec[0]))) return spec[2];\n    }\n  }\n\n  CodeMirror.defineMode(\"htmlmixed\", function (config, parserConfig) {\n    var htmlMode = CodeMirror.getMode(config, {\n      name: \"xml\",\n      htmlMode: true,\n      multilineTagIndentFactor: parserConfig.multilineTagIndentFactor,\n      multilineTagIndentPastTag: parserConfig.multilineTagIndentPastTag,\n      allowMissingTagName: parserConfig.allowMissingTagName\n    });\n    var tags = {};\n    var configTags = parserConfig && parserConfig.tags,\n        configScript = parserConfig && parserConfig.scriptTypes;\n    addTags(defaultTags, tags);\n    if (configTags) addTags(configTags, tags);\n    if (configScript) for (var i = configScript.length - 1; i >= 0; i--) tags.script.unshift([\"type\", configScript[i].matches, configScript[i].mode]);\n\n    function html(stream, state) {\n      var style = htmlMode.token(stream, state.htmlState),\n          tag = /\\btag\\b/.test(style),\n          tagName;\n\n      if (tag && !/[<>\\s\\/]/.test(stream.current()) && (tagName = state.htmlState.tagName && state.htmlState.tagName.toLowerCase()) && tags.hasOwnProperty(tagName)) {\n        state.inTag = tagName + \" \";\n      } else if (state.inTag && tag && />$/.test(stream.current())) {\n        var inTag = /^([\\S]+) (.*)/.exec(state.inTag);\n        state.inTag = null;\n        var modeSpec = stream.current() == \">\" && findMatchingMode(tags[inTag[1]], inTag[2]);\n        var mode = CodeMirror.getMode(config, modeSpec);\n        var endTagA = getTagRegexp(inTag[1], true),\n            endTag = getTagRegexp(inTag[1], false);\n\n        state.token = function (stream, state) {\n          if (stream.match(endTagA, false)) {\n            state.token = html;\n            state.localState = state.localMode = null;\n            return null;\n          }\n\n          return maybeBackup(stream, endTag, state.localMode.token(stream, state.localState));\n        };\n\n        state.localMode = mode;\n        state.localState = CodeMirror.startState(mode, htmlMode.indent(state.htmlState, \"\", \"\"));\n      } else if (state.inTag) {\n        state.inTag += stream.current();\n        if (stream.eol()) state.inTag += \" \";\n      }\n\n      return style;\n    }\n\n    ;\n    return {\n      startState: function () {\n        var state = CodeMirror.startState(htmlMode);\n        return {\n          token: html,\n          inTag: null,\n          localMode: null,\n          localState: null,\n          htmlState: state\n        };\n      },\n      copyState: function (state) {\n        var local;\n\n        if (state.localState) {\n          local = CodeMirror.copyState(state.localMode, state.localState);\n        }\n\n        return {\n          token: state.token,\n          inTag: state.inTag,\n          localMode: state.localMode,\n          localState: local,\n          htmlState: CodeMirror.copyState(htmlMode, state.htmlState)\n        };\n      },\n      token: function (stream, state) {\n        return state.token(stream, state);\n      },\n      indent: function (state, textAfter, line) {\n        if (!state.localMode || /^\\s*<\\//.test(textAfter)) return htmlMode.indent(state.htmlState, textAfter, line);else if (state.localMode.indent) return state.localMode.indent(state.localState, textAfter, line);else return CodeMirror.Pass;\n      },\n      innerMode: function (state) {\n        return {\n          state: state.localState || state.htmlState,\n          mode: state.localMode || htmlMode\n        };\n      }\n    };\n  }, \"xml\", \"javascript\", \"css\");\n  CodeMirror.defineMIME(\"text/html\", \"htmlmixed\");\n});"],"names":["CodeMirror","defaultTags","script","style","maybeBackup","stream","pat","cur","current","close","search","backUp","length","match","attrRegexpCache","getAttrRegexp","attr","regexp","RegExp","getAttrValue","text","exec","getTagRegexp","tagName","anchored","addTags","from","to","tag","dest","source","i","unshift","findMatchingMode","tagInfo","tagText","spec","test","defineMode","config","parserConfig","htmlMode","getMode","name","multilineTagIndentFactor","multilineTagIndentPastTag","allowMissingTagName","tags","configTags","configScript","scriptTypes","matches","mode","html","state","token","htmlState","toLowerCase","hasOwnProperty","inTag","modeSpec","endTagA","endTag","localState","localMode","startState","indent","eol","copyState","local","textAfter","line","Pass","innerMode","defineMIME","mod"],"sourceRoot":""}