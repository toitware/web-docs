{
    "componentChunkName": "component---src-components-layout-mdx-layout-tsx",
    "path": "/language/math",
    "result": {"data":{"site":{"siteMetadata":{"title":"Toit documentation"}},"mdx":{"body":"const _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nconst _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  let {\n    components\n  } = _ref,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"mathematics\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h1\",\n    \"href\": \"#mathematics\",\n    \"aria-label\": \"mathematics permalink\",\n    \"className\": \"table-of-contents-icon before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), `Mathematics`), mdx(\"p\", null, `Find mathematical algorithms in the\n`, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://libs.toit.io/math/library-summary\"\n  }, `math module`), `, and the numbers available\nin the `, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://libs.toit.io/core/numbers/library-summary\"\n  }, `numbers module`), ` of\nthe core library.`), mdx(\"h2\", {\n    \"id\": \"numbers\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#numbers\",\n    \"aria-label\": \"numbers permalink\",\n    \"className\": \"table-of-contents-icon before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), `Numbers`), mdx(\"p\", null, `Toit `, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://libs.toit.io/core/numbers/library-summary\"\n  }, `numbers`), ` support integers and floats.`), mdx(\"h3\", {\n    \"id\": \"integers-and-floats\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#integers-and-floats\",\n    \"aria-label\": \"integers and floats permalink\",\n    \"className\": \"table-of-contents-icon before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), `Integers and floats`), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://libs.toit.io/core/numbers/class-int\"\n  }, `Integers`), ` are whole numbers such\nas -1, 0, 1, 2, 3, .. and they have type `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `int`), `.\n`, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://libs.toit.io/core/numbers/class-float\"\n  }, `Floats`), ` are numbers with a\ndecimal point. Floats are contagious, meaning that any binary operation\ninvolving a float forces the other operand to be converted to a float before\ndoing the operation (thus yielding a float as result).`), mdx(\"p\", null, `Integers are 64-bit signed integers.\nFloats are of size 64-bit, following the\n`, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://en.wikipedia.org/wiki/Double-precision_floating-point_format\"\n  }, `IEEE 754-1985 double format`), `.`), mdx(\"p\", null, `To make large numbers more readable, digits are often grouped using underscores.\nWhen storing these values and when displaying them on screen, Toit just ignores the underscores.`), mdx(\"p\", null, `Underscores work for both integers and floats.`), mdx(\"p\", null, `You can use the `, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://libs.toit.io/core/numbers/class-num\"\n  }, `mathematics\noperators`), ` such as `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `+`), `, `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `-`), `, `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `*`), `,\nand `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `/`), ` to form expressions that include numbers.\nThe `, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://libs.toit.io/core/numbers/class-int\"\n  }, `int class`), ` has additional\noperations (like bit-shifting) that are not supported by the floating point\nnumbers.`), mdx(\"p\", null, `Additional mathematical constants and functions are available in the\n`, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://libs.toit.io/math/library-summary\"\n  }, `math module`), `.`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, `import math\n\nmain:\n  print (math.pow 2 10)\n`)), mdx(\"h2\", {\n    \"id\": \"randomization\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#randomization\",\n    \"aria-label\": \"randomization permalink\",\n    \"className\": \"table-of-contents-icon before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), `Randomization`), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `random`), ` is a function included in the\n`, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://libs.toit.io/core/utils/library-summary#random(0%2C0%2C0%2C)\"\n  }, `core library`)), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `random 10`), ` gives you a random number between 0 and 10 (10 exclusive).`), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `random 3 5`), ` gives you a random number between 3 and 5 (5 exclusive).`), mdx(\"h2\", {\n    \"id\": \"range\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#range\",\n    \"aria-label\": \"range permalink\",\n    \"className\": \"table-of-contents-icon before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), `Range`), mdx(\"p\", null, `To create a range similar to the built-in function in Python:`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, `range from/int to/int step=1 [block]:\n  if step > 0:\n    for i := from; i < to; i += step:\n      block.call i\n  else:\n    for i := from; i > to; i += step:\n      block.call i\n\nmain:\n  range 5 10:\n    print it  // Logs 5, 6, 7, 8, 9.\n  range 10 20 2:\n    print it  // Logs 10, 12, 14, 16, 18.\n`)), mdx(\"h2\", {\n    \"id\": \"bit-operations\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#bit-operations\",\n    \"aria-label\": \"bit operations permalink\",\n    \"className\": \"table-of-contents-icon before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), `Bit operations`), mdx(\"p\", null, `The bit operations on integers work on 64 bit signed twos-complement\nnumbers. Thus the shift operators can take shift distances of up to 63:`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, `  print 0x8000_0000_0000_0000 >>> 63  // >> 1\n`)), mdx(\"p\", null, `The shift-right operator, `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `>>`), ` preserves the sign of its input, while\nthe unsigned shift-right operator `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `>>>`), ` shifts in zeros, which can\ngive a positive result for a negative input.`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, `  print -20 >> 2  // >> -5\n  print -20 >>> 2 // >> 4611686018427387899\n`)), mdx(\"p\", null, `Shifting further than 63 will shift all bits out, rather than being\nundefined behavior (in C and C++) or taking the modulus of the\nshift distance (in Java):`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, `  print -20 >> 64  // >> -1\n  print -20 >>> 64 // >> 0\n`)), mdx(\"p\", null, `See the full documentation of operators on\n`, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://libs.toit.io/core/numbers/class-int\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, `int`)), ` and\n`, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://libs.toit.io/core/numbers/class-float\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, `float`)), `.`));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#mathematics","title":"Mathematics","items":[{"url":"#numbers","title":"Numbers","items":[{"url":"#integers-and-floats","title":"Integers and floats"}]},{"url":"#randomization","title":"Randomization"},{"url":"#range","title":"Range"},{"url":"#bit-operations","title":"Bit operations"}]}]}}},"pageContext":{"title":"Mathematics","id":"03345ec8-425d-53b4-8131-c88c0ec03432"}},
    "staticQueryHashes": ["2197327828"]}