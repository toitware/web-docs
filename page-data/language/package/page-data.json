{
    "componentChunkName": "component---src-components-layout-mdx-layout-tsx",
    "path": "/language/package",
    "result": {"data":{"site":{"siteMetadata":{"title":"Toit documentation"}},"mdx":{"body":"const _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nconst _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return mdx(\"div\", props);\n};\n\nconst Tabs = makeShortcode(\"Tabs\");\nconst Tab = makeShortcode(\"Tab\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  let {\n    components\n  } = _ref,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"packages\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h1\",\n    \"href\": \"#packages\",\n    \"aria-label\": \"packages permalink\",\n    \"className\": \"table-of-contents-icon before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), `Packages`), mdx(\"p\", null, `The Toit language comes with its own package manager. This document describes how Toit packages work, and how users can take advantage of them.`), mdx(\"h2\", {\n    \"id\": \"introduction\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#introduction\",\n    \"aria-label\": \"introduction permalink\",\n    \"className\": \"table-of-contents-icon before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), `Introduction`), mdx(Tabs, {\n    mdxType: \"Tabs\"\n  }, mdx(Tab, {\n    label: \"Jaguar\",\n    mdxType: \"Tab\"\n  }, mdx(\"p\", null, `The Toit package manager (henceforth TPM) is integrated with the\n`, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/toitlang/jaguar\"\n  }, `Jaguar CLI`), `.\nAll of its commands start with the `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `pkg`), ` command.\nFor example`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-shell\"\n  }, `jag pkg install github.com/toitware/toit-morse\n`)), mdx(\"p\", null, `installs the package 'morse'.`)), mdx(Tab, {\n    label: \"toitlang.org\",\n    mdxType: \"Tab\"\n  }, mdx(\"p\", null, `The Toit package manager (henceforth TPM) is integrated with the\n`, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://toitlang.org/\"\n  }, `Toit SDK`), `.\nAll of its commands start with the `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `toit.pkg`), ` command.\nFor example:`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-shell\"\n  }, `toit.pkg install github.com/toitware/toit-morse\n`)), mdx(\"p\", null, `installs the package 'morse'.`))), mdx(\"p\", null, `TPM is a powerful, yet convenient package manager with lots of inspiration from Linux package managers and other languages' package managers.\nIt combines the best properties of them:`), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, `Decentralized: TPM is decentralized. There isn't a single entity that is in control of package management.`)), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, `Offline: TPM works mostly offline. It only goes online for synchronization and package downloading, and even these steps may be limited to intranets.\nThis makes it faster, and easier to work with in environments with restricted or bad internet connections.`)), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, `Packages are identified by their download location. As such, there isn't a single entity being in charge of keeping track of all used names. This means that early adopters can't just snatch the best names. It also means that private packages don't need to worry about conflicting names with public packages.`)), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, `Packages are downloaded through Git. The effort to publish a package is kept minimal. Users don't need to create bundles and upload them to a specific place.`))), mdx(\"h2\", {\n    \"id\": \"life-of-a-package\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#life-of-a-package\",\n    \"aria-label\": \"life of a package permalink\",\n    \"className\": \"table-of-contents-icon before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), `Life of a package`), mdx(\"p\", null, `This section describes how a package is created and then used.`), mdx(\"p\", null, `A package starts out as a folder with Toit files. If they are useful, it makes sense to create a package so they can be shared among different projects and so they can be contributed to the community.`), mdx(\"p\", null, `The developer first moves the code into a `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `src`), ` folder, and then adds a specification file `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `package.yaml`), `. This file serves as a signal to TPM that the repository can be used as a package, and\nalso contains information such as the package's name, description, and dependencies. (See the `, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"pkgconcepts/#package\"\n  }, `specification section`), ` for more details).`), mdx(\"p\", null, `Then the package author uploads the package to a public Git repository. This can be GitHub, GitLab, or any other Git hosting service.`), mdx(\"p\", null, `For GitHub repositories, the `, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/toitlang/action-publish\"\n  }, `publish action`), ` then automatically publishes the package to the `, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://pkg.toit.io/publish\"\n  }, `Toit package registry`), `. The author just needs to create a new release\nwith a semver tag, like \"v1.2.1\".`), mdx(\"p\", null, `Alternatively, authors can also publish packages by hand. This requires to create a version tag,\nand then to inform the `, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://pkg.toit.io/publish\"\n  }, `Toit package registry`), ` about the new version.`), mdx(\"p\", null, `Registries create descriptions of the known packages and store them in a Git repository. The `, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/toitware/registry/tree/main/packages/github.com\"\n  }, `Toit registry`), ` is just a public Git repository with description files. It also has a human readable facade at `, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://pkg.toit.io\"\n  }, `https://pkg.toit.io`), `.`), mdx(Tabs, {\n    mdxType: \"Tabs\"\n  }, mdx(Tab, {\n    label: \"Jaguar\",\n    mdxType: \"Tab\"\n  }, \"Toit programmers synchronize this repository, giving them access to all the descriptions in that registry. This is done through the `jag pkg sync` command which simply pulls the latest changes.\", mdx(\"p\", null, `With all the descriptions, Toit programmers can find the package they want. The `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `jag pkg search <keyword>`), ` command searches for relevant packages.\nNote that searching or browsing packages is done locally in the synchronized registries.\nDevelopers can then install any of the packages by writing `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `jag pkg install <package>`), `.`), mdx(\"p\", null, `It's also possible to view the list of all available packages in the `, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://pkg.toit.io/packages\"\n  }, `package registry web-site`), ` or search for a specific package by its name.`), mdx(\"p\", null, `The name of the package must be non-ambiguous, and thus might need a qualifier. Since TPM doesn't have a single namespace, many packages can have a similar short name. This is by design (as it allows decentralized and private packages), but it might sometimes require to be a little bit more specific when installing a package. For example, `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `jag pkg install utils`), ` might not be specific enough to uniquely identify a package, and a more qualified name, such as `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `jag pkg install some_company/utils`), ` could be necessary.`)), mdx(Tab, {\n    label: \"toitlang.org\",\n    mdxType: \"Tab\"\n  }, \"Toit programmers synchronize this repository, giving them access to all the descriptions in that registry. This is done through the `toit.pkg sync` command which simply pulls the latest changes.\", mdx(\"p\", null, `With all the descriptions, Toit programmers can find the package they want. The `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `toit.pkg search <keyword>`), ` command searches for relevant packages.\nNote that searching or browsing packages is done locally in the synchronized registries.\nDevelopers can then install any of the packages by writing `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `toit.pkg install <package>`), `.`), mdx(\"p\", null, `It's also possible to view the list of all available packages in the `, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://pkg.toit.io/packages\"\n  }, `package registry web-site`), ` or search for a specific package by its name.`), mdx(\"p\", null, `The name of the package must be non-ambiguous, and thus might need a qualifier. Since TPM doesn't have a single namespace, many packages can have a similar short name. This is by design (as it allows decentralized and private packages), but it might sometimes require to be a little bit more specific when installing a package. For example, `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `toit.pkg install utils`), ` might not be specific enough to uniquely identify a package, and a more qualified name, such as `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `toit.pkg install some_company/utils`), ` could be necessary.`))), mdx(\"p\", null, `Before TPM downloads the sources of a package it first looks at all of the package's dependencies and finds versions that work. This is, again, done locally using the synchronized descriptions.`), mdx(\"p\", null, `TPM then downloads the packages from their original locations (or, potentially, a mirror). It stores the downloaded packages in a cache directory, by default in the project folder in `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `.packages`), `.`), mdx(\"p\", null, `After the package and its dependencies have all been successfully downloaded, a reference to them is added to the application's `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `package.lock`), ` file. If no such file exists, it is created.`), mdx(\"p\", null, `At this point the application can use the newly installed package with its prefix (by default the package name, but can also be changed during installation). For example, for the package 'morse' the user would write:`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, `import morse\n\nmain:\n  morse.encode-string \"hello world\"\n`)), mdx(\"p\", null, `Both the `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `package.yaml`), ` and the `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `package.lock`), ` files should be checked in and\nshared with other developers who want to work with the same application or\npackage. However the `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `.packages`), ` directory is local and should not be\ncommitted. For git, `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `.packages/`), ` should be added to your `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `.gitignore`), ` file.`), mdx(\"p\", null, `Before being able to use a program or package on a different computer one\nhas to run `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `jag pkg install`), ` or `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `toit.pkg install`), ` to\ndownload the packages that are specified in the lock file.`), mdx(\"h2\", {\n    \"id\": \"good-practice\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#good-practice\",\n    \"aria-label\": \"good practice permalink\",\n    \"className\": \"table-of-contents-icon before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), `Good practice`), mdx(\"p\", null, `Packages are ideally used by many developers. As such, we advise developers to spend some time polishing their packages. None of the following suggestions are mandatory, but they increase the quality of the package, and may eventually lead to improve their ranking in search results.`), mdx(\"h3\", {\n    \"id\": \"license\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#license\",\n    \"aria-label\": \"license permalink\",\n    \"className\": \"table-of-contents-icon before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), `License`), mdx(\"p\", null, `Packages should have a license file. Without it, they are considered proprietary which almost always means that other developers can't really use them.\nIf a package is just shared internally in a company a license file is not necessary.`), mdx(\"h3\", {\n    \"id\": \"readme\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#readme\",\n    \"aria-label\": \"readme permalink\",\n    \"className\": \"table-of-contents-icon before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), `README`), mdx(\"p\", null, `Packages should have a `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `README.md`), ` that explains what the package does. The following convention make READMEs more uniform and are recognized by TPM:`), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, `A title with the name of the package.`)), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, `A first paragraph with a short description that makes sense on its own.`), mdx(\"p\", {\n    parentName: \"li\"\n  }, `A good guideline is to write the first paragraph as if it was preceded by \"This is a package containing\". For example:`), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, `\"A driver for the Acme Corp. GPS module\".`)), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, `\"Utility functions to make working with large collections more efficient. The load is distributed among several threads, thus increasing the throughput by a factor of two\".`)), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, `\"Algorithms to rank players using the ELO ranking system or the Bradley-Terry model\".`)), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, `\"A generic file system abstraction layer\".`)), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, `\"An API to upload and run Google Apps scripts\".`))))), mdx(\"p\", null, `It is also good practice to provide a small usage example, and information on how to report bugs and request features.`), mdx(\"h3\", {\n    \"id\": \"toitdocs\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#toitdocs\",\n    \"aria-label\": \"toitdocs permalink\",\n    \"className\": \"table-of-contents-icon before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), `Toitdocs`), mdx(\"p\", null, `The public code of a package should have toitdocs. See the `, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../sdk/toitdoc\"\n  }, `documentation convention`), `, to learn how to write good inline documentation.`), mdx(\"h3\", {\n    \"id\": \"types\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#types\",\n    \"aria-label\": \"types permalink\",\n    \"className\": \"table-of-contents-icon before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), `Types`), mdx(\"p\", null, `Toit is optionally typed, and developers are free to write as many types as they think make sense. In many respects, types are similar to documentation: they help the developer, but can be a burden (and clutter the code base) if they are required to be everywhere.`), mdx(\"p\", null, `For code that is accessed by users of packages, having more documentation and also types can be very helpful. For example, code completion and warnings work much better with types. We therefore recommend to put types on code that is exposed from a package.`), mdx(\"h3\", {\n    \"id\": \"examples\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#examples\",\n    \"aria-label\": \"examples permalink\",\n    \"className\": \"table-of-contents-icon before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), `Examples`), mdx(\"p\", null, `A high quality package should have an example folder. Examples don't need to be big, but should show key-features of the package.`));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#packages","title":"Packages","items":[{"url":"#introduction","title":"Introduction"},{"url":"#life-of-a-package","title":"Life of a package"},{"url":"#good-practice","title":"Good practice","items":[{"url":"#license","title":"License"},{"url":"#readme","title":"README"},{"url":"#toitdocs","title":"Toitdocs"},{"url":"#types","title":"Types"},{"url":"#examples","title":"Examples"}]}]}]}}},"pageContext":{"title":"Packages","id":"999cfe22-9a18-5459-b0da-2280ba2c4abf"}},
    "staticQueryHashes": ["2197327828"]}