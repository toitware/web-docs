{
    "componentChunkName": "component---src-components-layout-mdx-layout-tsx",
    "path": "/language/package/pkgguide",
    "result": {"data":{"site":{"siteMetadata":{"title":"Toit documentation"}},"mdx":{"body":"const _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nconst _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return mdx(\"div\", props);\n};\n\nconst Tabs = makeShortcode(\"Tabs\");\nconst Tab = makeShortcode(\"Tab\");\nconst Note = makeShortcode(\"Note\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  let {\n    components\n  } = _ref,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"package-quick-start\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h1\",\n    \"href\": \"#package-quick-start\",\n    \"aria-label\": \"package quick start permalink\",\n    \"className\": \"table-of-contents-icon before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), `Package quick start`), mdx(\"p\", null, `This section provides instructions on how to use the Toit package manager (henceforth TPM) for common operations. See `, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../../package\"\n  }, `Packages`), ` for the full documentation.`), mdx(\"h2\", {\n    \"id\": \"installing-a-package\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#installing-a-package\",\n    \"aria-label\": \"installing a package permalink\",\n    \"className\": \"table-of-contents-icon before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), `Installing a package`), mdx(\"p\", null, `The following CLI commands search for a package, and then install it.`), mdx(Tabs, {\n    mdxType: \"Tabs\"\n  }, mdx(Tab, {\n    label: \"Jaguar\",\n    mdxType: \"Tab\"\n  }, mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-shell\"\n  }, `jag pkg search --verbose morse  # Search for a package \"morse\".\njag pkg install morse # Install package \"morse\".\n`)), mdx(\"p\", null, `Note that the example and test folder generally are considered to be\nseparate projects as they might have different dependencies than the package\nitself. We recommend to open the example or test folder in separate instances\nof the IDE.`), mdx(Note, {\n    title: \"Unique names\",\n    mdxType: \"Note\"\n  }, mdx(\"p\", null, `The installation of \"morse\" only works if the name is unambiguous. If there are multiple \"morse\" packages, then one has to use the URL. It is possible to omit leading segments if that makes the package unique:`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-shell\"\n  }, `jag pkg install github.com/toitware/toit-morse\njag pkg install toitware/toit-morse  # Probably already unique.\n`)))), mdx(Tab, {\n    label: \"toitlang.org\",\n    mdxType: \"Tab\"\n  }, mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-shell\"\n  }, `toit.pkg search --verbose morse  # Search for a package \"morse\".\ntoit.pkg install morse # Install package \"morse\".\n`)), mdx(\"p\", null, `Note that the example and test folder generally are considered to be\nseparate projects as they might have different dependencies than the package\nitself. We recommend to open the example or test folder in separate instances\nof the IDE.`), mdx(Note, {\n    title: \"Unique names\",\n    mdxType: \"Note\"\n  }, mdx(\"p\", null, `The installation of \"morse\" only works if the name is unambiguous. If there are multiple \"morse\" packages, then one has to use the URL. It is possible to omit leading segments if that makes the package unique:`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-shell\"\n  }, `toit.pkg install github.com/toitware/toit-morse\ntoit.pkg install toitware/toit-morse  # Probably already unique.\n`))))), mdx(\"h2\", {\n    \"id\": \"adding-a-registry\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#adding-a-registry\",\n    \"aria-label\": \"adding a registry permalink\",\n    \"className\": \"table-of-contents-icon before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), `Adding a registry`), mdx(\"p\", null, `Toit supports multiple package registries. This can be useful if you want to use packages that are not part of the Toit registry, like private packages.`), mdx(Tabs, {\n    mdxType: \"Tabs\"\n  }, mdx(Tab, {\n    label: \"Jaguar\",\n    mdxType: \"Tab\"\n  }, mdx(\"p\", null, `See which registries are installed:`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-shell\"\n  }, `jag pkg registry list\n`)), mdx(\"p\", null, `You should have one or more registries:`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-txt\"\n  }, `toit: github.com/toitware/registry (git)\n`)), mdx(\"p\", null, `If not, add a registry; for example the Toit registry:`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-shell\"\n  }, `jag pkg registry add toit github.com/toitware/registry\n`))), mdx(Tab, {\n    label: \"toitlang.org\",\n    mdxType: \"Tab\"\n  }, mdx(\"p\", null, `See which registries are installed:`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-shell\"\n  }, `toit.pkg registry list\n`)), mdx(\"p\", null, `You should have one or more registries:`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-txt\"\n  }, `toit: github.com/toitware/registry (git)\n`)), mdx(\"p\", null, `If not, add a registry; for example the Toit registry:`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-shell\"\n  }, `toit.pkg registry add toit github.com/toitware/registry\n`)))), mdx(\"h2\", {\n    \"id\": \"creating-a-package\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#creating-a-package\",\n    \"aria-label\": \"creating a package permalink\",\n    \"className\": \"table-of-contents-icon before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), `Creating a package`), mdx(\"p\", null, `Create a new Git repository (for example `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `github.com/toitware/toit-morse`), `).`), mdx(\"p\", null, `Add or move code into the `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `src`), ` folder of the new repository.`), mdx(\"p\", null, `Optionally (but strongly recommended) add a LICENSE file. We recommend a `, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://en.wikipedia.org/wiki/Permissive_software_license\"\n  }, `permissive free software license`), `, such as MIT.`), mdx(\"p\", null, `Optionally (but strongly recommended) add a README.md. The first paragraph should start as if prefixed with \"This is a package containing\". The first paragraph should have meaning on its own.`), mdx(\"p\", null, `Optional (but strongly recommended): polish the package, with an eye on`), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"../../sdk/toitdoc\"\n  }, `toitdocs`), `,`), mdx(\"li\", {\n    parentName: \"ul\"\n  }, `types,`), mdx(\"li\", {\n    parentName: \"ul\"\n  }, `examples, and`), mdx(\"li\", {\n    parentName: \"ul\"\n  }, `tests`)), mdx(\"p\", null, `Create a `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `package.yaml`), ` in the root of the repository, with the following entries:`), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `name`), `: The name of the package.`)), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `description`), `: A short description of the package.`)), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `license`), `: The license of the package. Don't add this entry if there is a LICENSE file. The license file or entry should follow `, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.github.com/en/github/creating-cloning-and-archiving-repositories/licensing-a-repository\"\n  }, `github conventions`), `.`)), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `dependencies`), `: a map of dependencies. This are automatically added by `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `install`), ` commands, so you rarely have to add them by hand. Each entry should look as follows:`), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", {\n    parentName: \"pre\"\n  }, `  prefix:\n    url: <PKG_URL>\n    version: <VERSION_CONSTRAINT, such as ^1.0.0>\n`)))), mdx(\"h3\", {\n    \"id\": \"publishing\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#publishing\",\n    \"aria-label\": \"publishing permalink\",\n    \"className\": \"table-of-contents-icon before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), `Publishing`), mdx(\"p\", null, `Commit everything and tag it with the version number of the package. If you think that the package should be used by other developers, consider giving it a `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `v1.0.0`), ` version number. (There is nothing gained by calling it `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `v0.0.1`), `).`), mdx(\"p\", null, `Version numbers must be prefixed with `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `v`), ` and follow `, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://semver.org\"\n  }, `semantic versioning`), `.`), mdx(\"p\", null, `Push your changes to the public repository (if not yet done), and inform a registry of its existence.`), mdx(\"p\", null, `For the Toit package registry, publish your new package `, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://pkg.toit.io/publish\"\n  }, `here`), `. Your package will be validated by the Toit team, before it can be available for the rest of the\nToit community. The validation is performed solely to avoid having packages that could be potentially harmful.`));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#package-quick-start","title":"Package quick start","items":[{"url":"#installing-a-package","title":"Installing a package"},{"url":"#adding-a-registry","title":"Adding a registry"},{"url":"#creating-a-package","title":"Creating a package","items":[{"url":"#publishing","title":"Publishing"}]}]}]}}},"pageContext":{"title":"Package quick start","id":"d0ca1cbf-adcd-54d9-a47a-c4ba3359b208"}},
    "staticQueryHashes": ["2197327828"]}