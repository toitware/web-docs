{
    "componentChunkName": "component---src-components-layout-mdx-layout-tsx",
    "path": "/getstarted",
    "result": {"data":{"site":{"siteMetadata":{"title":"Toit documentation"}},"mdx":{"body":"const _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nconst _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return mdx(\"div\", props);\n};\n\nconst Note = makeShortcode(\"Note\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  let {\n    components\n  } = _ref,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"get-started\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h1\",\n    \"href\": \"#get-started\",\n    \"aria-label\": \"get started permalink\",\n    \"className\": \"table-of-contents-icon before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), `Get started`), mdx(\"p\", null, `Toit is a modern high-level language designed specifically for microcontrollers. It is `, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/toitlang/toit\"\n  }, `open source`), ` and the\nlanguage implementation consists of the compiler, virtual machine, and standard libraries that together enable Toit programs to run on an ESP32.`), mdx(\"p\", null, `Toit is optimized for live reloading on your microcontroller. Your code runs incrementally as you write it and you get instant feedback. Push\nchanges over your local WiFi in two seconds and reserve your USB cable for charging your phone. You iterate quickly, learn fast, and build\nbetter things.`), mdx(Note, {\n    mdxType: \"Note\"\n  }, mdx(\"p\", null, `Impatient? `, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"device\"\n  }, `Get started now`), ` and have your code running on your device in 5 minutes!`)), mdx(\"h2\", {\n    \"id\": \"architecture\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#architecture\",\n    \"aria-label\": \"architecture permalink\",\n    \"className\": \"table-of-contents-icon before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), `Architecture`), mdx(\"p\", null, `Toit uses virtual machine technology to support running multiple containers on your device. The containers are developed and maintained\nindependently from each other and the virtual machine provides the capabilities for safely running your platform-independent applications,\nservices, and drivers side-by-side.`), mdx(\"img\", {\n    src: Architecture,\n    alt: \"Architecture of Toit\"\n  }), mdx(\"p\", null, `This architecture provides a lot of flexibility and it allows you to customize the functionality of your devices by choosing the\nright services and containers to run instead of re-compiling and re-linking.`), mdx(\"h2\", {\n    \"id\": \"development\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#development\",\n    \"aria-label\": \"development permalink\",\n    \"className\": \"table-of-contents-icon before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), `Development`), mdx(\"p\", null, `Toit comes with pre-packaged development support that makes experimenting and learning by running code on your device\neasy. You change your code in your editor, update it on your device, and restart it all within seconds. No need to flash over serial,\nreboot your device, or wait for it to reconnect to your network. It only takes a few minutes to `, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"device\"\n  }, `get started`), `.`), mdx(\"p\", null, `Under the covers, the development support is provided by `, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/toitlang/jaguar\"\n  }, `Jaguar`), ` `, `â€”`, ` a small, open-source Toit\nservice that runs in a container on your ESP32. It uses the capabilities of the Toit virtual machine to let you update and restart\nyour code through an HTTP server that runs on the device and is accessed via local WiFi. Jaguar is completely optional and it intended\nto be used during development only, so it is typically left out on devices in production.`), mdx(\"h2\", {\n    \"id\": \"deployment\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#deployment\",\n    \"aria-label\": \"deployment permalink\",\n    \"className\": \"table-of-contents-icon before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), `Deployment`), mdx(\"p\", null, `When you are ready to run your devices in production, you can rely on the Toit virtual machine's support for over-the-air (OTA) firmware\nupdates. You choose when and where to download the updates from and the updates can bundle any number of containers, so all your applications\nand services can be kept up-to-date through the OTA mechanism. `, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/toitlang/jaguar\"\n  }, `Jaguar`), ` is an excellent\n`, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/toitlang/jaguar/blob/36252dc369979062713b0807b5eca309e12a9784/src/jaguar.toit#L303\"\n  }, `source of inspiration`), ` for how to\nuse the OTA support from your own applications.`), mdx(\"p\", null, `If you're looking for a more managed solution for your fleet of devices, Toit offers premium, pre-packaged deployment support\nthrough the `, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"fleet\"\n  }, `Artemis`), `. Artemis is a fleet management infrastructure that connects your devices to the cloud and\nmakes it possible to seamlessly update the firmware, containers, and configurations that run on your devices. It is free for\nup to ten devices and built to scale.`), mdx(Note, {\n    mdxType: \"Note\"\n  }, mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"fleet\"\n  }, `Get started with Artemis today`), ` and manage your devices with ease through the cloud.`)), mdx(\"p\", null, `Artemis is the combination of an on-device service that communicates with a broker in the cloud `, `â€”`, ` and the developer tooling to help\norchestrate the devices. Hosting your own broker is possible and encouraged, so all your data and code remains under your control. Since\nArtemis runs in its own container on your devices, it is easy to add Artemis to already deployed devices and remove it again later.`));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#get-started","title":"Get started","items":[{"url":"#architecture","title":"Architecture"},{"url":"#development","title":"Development"},{"url":"#deployment","title":"Deployment"}]}]}}},"pageContext":{"title":"Get started","id":"03c658ed-d14a-5b5e-9605-79cc9f13ba3b"}},
    "staticQueryHashes": ["2197327828"]}