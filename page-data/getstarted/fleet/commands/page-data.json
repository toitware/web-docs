{
    "componentChunkName": "component---src-components-layout-mdx-layout-tsx",
    "path": "/getstarted/fleet/commands",
    "result": {"data":{"site":{"siteMetadata":{"title":"Toit documentation"}},"mdx":{"body":"const _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nconst _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  let {\n    components\n  } = _ref,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"commands\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h1\",\n    \"href\": \"#commands\",\n    \"aria-label\": \"commands permalink\",\n    \"className\": \"table-of-contents-icon before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), `Commands`), mdx(\"h2\", {\n    \"id\": \"artemis-serial-flash\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#artemis-serial-flash\",\n    \"aria-label\": \"artemis serial flash permalink\",\n    \"className\": \"table-of-contents-icon before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), mdx(\"inlineCode\", {\n    parentName: \"h2\"\n  }, `artemis serial flash`)), mdx(\"p\", null, `The flash command converts your specification file into a binary firmware and\nflashes it onto your device using a bundled version of\n`, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/espressif/esptool\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, `esptool`)), `.`), mdx(\"p\", null, `Unless you are on Linux you will probably need to change the `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `/dev/ttyUSB0`), ` to your\nsetup.  Sometimes the name is `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `/dev/ttyACM0`), `, depending on which USB-to-serial driver\nyour computer is using.`), mdx(\"p\", null, `On some ESP32 devices, you need to press a button to flash it over USB.`), mdx(\"p\", null, `If the flashing doesn't work you might still end up with a provisioned identity, that\nisn't used. We will improve this situation, but for now don't worry about it.`), mdx(\"p\", null, `To access `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `/dev/ttyUSB0`), ` on Linux you probably need to be a member\nof some group, normally either `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `uucp`), ` or `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `dialout`), `.  To see which groups you are\na member of and which group owns the device, plug in an ESP32 to the USB port\nand try:`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, `groups\nls -g /dev/ttyUSB0\n`)), mdx(\"p\", null, `If you lack a group membership, you can add it with`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, `sudo usermod -aG dialout $USER\n`)), mdx(\"p\", null, `You usually have to log out and log back in for this to take effect.`), mdx(\"h2\", {\n    \"id\": \"artemis-device-show\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#artemis-device-show\",\n    \"aria-label\": \"artemis device show permalink\",\n    \"className\": \"table-of-contents-icon before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), mdx(\"inlineCode\", {\n    parentName: \"h2\"\n  }, `artemis device show`)), mdx(\"p\", null, `You can always see the status of your device by doing `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `artemis device show`), `. It shows\nuseful information about a device, including its state and recent events:`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-text\"\n  }, `% artemis device show -d xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx --max-events=6\nDevice ID: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\nOrganization ID: yyyyyyyy-yyyy-yyyy-yyyy-yyyyyyyyyyyy\n\nFirmware state as reported by the device:\n  apps:\n    cellular:\n      id: bad371bf-af6d-5188-0da4-ac3a3b98d3a2\n      triggers:\n        boot: 1\n      background: 1\n  firmware: eyNVAlUPZGV2aWNlLXNwZWNpZmljWyRVI0kB1nsj...QXu7oV/CJX94Q3P0Ae/Vau/XsWL7JJl1iWSw0w==\n  connections: [{type: cellular, config: {cellular.apn: soracom.io, cellular.uart.rx: 23, cellular.uart.tx: 5, cellular.uart.cts: 18, cellular.uart.rts: 19, cellular.log.level: 1}}, {ssid: ..., type: wifi, password: ...}]\n  max-offline: 300\n  sdk-version: v2.0.0-alpha.69\n\nGoal is the same as the reported firmware state.\n\nEvents:\n  15:17:12.981 get-goal\n  15:12:05.228 get-goal\n  15:01:43.273 get-goal\n  15:01:41.943 update-state\n  15:01:28.073 update-state\n  15:00:34.871 get-goal\n`)), mdx(\"p\", null, `You can use the events as a primitive health monitoring facility and see when\nthe device synchronize from the cloud (`, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `get-goal`), `) and to the cloud (`, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `update-state`), `).`));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#commands","title":"Commands","items":[{"url":"#artemis-serial-flash","title":"artemis serial flash"},{"url":"#artemis-device-show","title":"artemis device show"}]}]}}},"pageContext":{"title":"Commands","id":"27e8d3fd-b648-5267-adde-4bfa2f8dc92d"}},
    "staticQueryHashes": ["2197327828"]}