{
    "componentChunkName": "component---src-components-layout-mdx-layout-tsx",
    "path": "/getstarted/fleet",
    "result": {"data":{"site":{"siteMetadata":{"title":"Toit documentation"}},"mdx":{"body":"const _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nconst _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return mdx(\"div\", props);\n};\n\nconst Tabs = makeShortcode(\"Tabs\");\nconst Tab = makeShortcode(\"Tab\");\nconst Note = makeShortcode(\"Note\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  let {\n    components\n  } = _ref,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"manage-your-fleet\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h1\",\n    \"href\": \"#manage-your-fleet\",\n    \"aria-label\": \"manage your fleet permalink\",\n    \"className\": \"table-of-contents-icon before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), `Manage your fleet`), mdx(\"p\", null, `Artemis is a fleet management system for ESP32 devices running the Toit platform.\nIt connects your devices to the cloud and makes it possible to seamlessly update\nthe firmware, containers, and configurations that run on your devices. It is free for\nup to ten devices and built to scale.`), mdx(\"p\", null, `Artemis is the combination of an on-device service that communicates with a broker\nin the cloud `, `â€”`, ` and the developer tooling to help orchestrate the devices. It is\npossible to host your own broker, so all your data and code remains under your\ncontrol.`), mdx(\"p\", null, `Artemis is designed to be `, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"./reliability\"\n  }, `reliable`), ` and robust. Configuration is\ntreated as code, and none of the servers are critical. As long as\nthe configuration is stored in a reliable system (typically Git), Artemis\ncan recover from a full loss of all servers.`), mdx(\"hr\", null), mdx(\"h1\", {\n    \"id\": \"installation\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h1\",\n    \"href\": \"#installation\",\n    \"aria-label\": \"installation permalink\",\n    \"className\": \"table-of-contents-icon before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), `Installation`), mdx(\"p\", null, `On your development machine, Artemis is a single command line tool (`, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `artemis`), `).\nYou can download it from here:`), mdx(Tabs, {\n    mdxType: \"Tabs\"\n  }, mdx(Tab, {\n    label: \"Windows\",\n    mdxType: \"Tab\"\n  }, mdx(\"p\", null, `Download `, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/toitware/artemis-releases/releases/latest/download/artemis-windows.zip\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, `artemis`)), `.`)), mdx(Tab, {\n    label: \"macOS\",\n    mdxType: \"Tab\"\n  }, mdx(\"p\", null, `Download `, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/toitware/artemis-releases/releases/latest/download/artemis.dmg\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, `artemis`)), `\n(or as an `, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/toitware/artemis-releases/releases/latest/download/artemis-macos.zip\"\n  }, `archive`), `).`)), mdx(Tab, {\n    label: \"Linux\",\n    mdxType: \"Tab\"\n  }, mdx(\"p\", null, `Download `, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/toitware/artemis-releases/releases/latest/download/artemis-linux.tar.gz\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, `artemis`)), `.`))), mdx(\"p\", null, `If you download an archive, you should unpack it and put the embedded `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `artemis`), ` or `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `artemis.exe`), ` binary\nsomewhere on your `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `PATH`), `. The same applies when you extract the `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `artemis`), ` binary from the macOS `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `artemis.dmg`), `\nfile.`), mdx(\"p\", null, `The Artemis command line tool is a standalone executable written in Toit. Use `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `artemis help`), ` for usage help.`), mdx(\"h2\", {\n    \"id\": \"git\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#git\",\n    \"aria-label\": \"git permalink\",\n    \"className\": \"table-of-contents-icon before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), `Git`), mdx(\"p\", null, `Artemis needs `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `git`), ` to be installed on your system. On most macOS and Linux systems,\n`, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `git`), ` is already installed. On Windows, you can download and install `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `git`), ` from\n`, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://git-scm.com/download/win\"\n  }, `git-scm.com`), `.`), mdx(\"h2\", {\n    \"id\": \"signing-up-and-logging-in\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#signing-up-and-logging-in\",\n    \"aria-label\": \"signing up and logging in permalink\",\n    \"className\": \"table-of-contents-icon before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), `Signing up and logging in`), mdx(\"p\", null, `All users must be authenticated. For OAuth-based authentication you can just\nsign up and log into Artemis as follows:`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, `artemis auth login --provider=github\n`)), mdx(\"p\", null, `or`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, `artemis auth login --provider=google\n`)), mdx(\"p\", null, `Alternatively, for email-based authentication, sign up with:`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, `artemis auth signup --email=myname@example.com --password=PASSWORD\n`)), mdx(\"p\", null, `Then, after having confirmed the email address, log in with:`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, `artemis auth login --email=myname@example.com --password=PASSWORD\n`)), mdx(\"p\", null, `Usually, signing up by OAuth is more convenient, but email-based authentication can be useful\nif you want to have multiple accounts. For example, with Google domains anything after\nthe \"+\" is discarded. So `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `email+additional@gmail.com`), ` is an alias for `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `email@gmail.com`), `.`), mdx(\"h2\", {\n    \"id\": \"creating-an-organization\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#creating-an-organization\",\n    \"aria-label\": \"creating an organization permalink\",\n    \"className\": \"table-of-contents-icon before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), `Creating an organization`), mdx(\"p\", null, `Every device must belong to an organization. You can create as many organizations as\nyou want (and there will eventually also be a way to remove them again). You can add an\norganization using `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `artemis org add`), ` like this:`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, `artemis org add \"My Organization\"\nartemis org show\nartemis org members list\n`)), mdx(\"p\", null, `The `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `artemis org show`), ` command shows you your organization ID, which is a `, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://en.wikipedia.org/wiki/Universally_unique_identifier\"\n  }, `UUID`), `.`), mdx(\"p\", null, `Once you create a new organization it is automatically set as default. You can switch to a different organization with\n`, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `artemis org default YOUR-ORG-ID`), `, or by passing the organization id to the commands that need one.`), mdx(\"p\", null, `You can add other users to your organization with `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `artemis org members add THEIR-USER-ID`), `. The\nuser you want to add can find THEIR-USER-ID with `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `artemis profile show`), `.`), mdx(\"p\", null, `If you want to, you can also change the name in your profile with:`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, `artemis profile update --name \"My full name\"\n`)), mdx(\"hr\", null), mdx(\"h1\", {\n    \"id\": \"getting-started\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h1\",\n    \"href\": \"#getting-started\",\n    \"aria-label\": \"getting started permalink\",\n    \"className\": \"table-of-contents-icon before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), `Getting started`), mdx(\"p\", null, `Once you've `, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"#installation\"\n  }, `downloaded`), ` the command line tool (`, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `artemis`), `),\n`, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"#signing-up-and-logging-in\"\n  }, `signed up`), `, and\n`, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"#creating-an-organization\"\n  }, `created an organization`), `,\nyou're ready to put Artemis on a device and manage it via the cloud.`), mdx(\"h2\", {\n    \"id\": \"first-steps\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#first-steps\",\n    \"aria-label\": \"first steps permalink\",\n    \"className\": \"table-of-contents-icon before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), `First steps`), mdx(\"p\", null, `Artemis manages fleets of devices. To get started, first you must create\nan empty fleet in a suitable directory. Go to the directory and run:`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, `artemis fleet init\n`)), mdx(\"p\", null, `This creates three files: `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `fleet.json`), `, `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `devices.json`), `, and `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `my-pod.yaml`), `.\nThe `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `fleet.json`), ` file holds some metadata and the list of devices in `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `devices.json`), `\nis empty. The `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `my-pod.yaml`), ` file is the most interesting to get started.`), mdx(\"p\", null, `Artemis lets you describe the functionality and configuration of your devices\nin `, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"pods\"\n  }, `pods`), `, which is a set of containers and the configuration\nof the environment they need to run in. Pods can be specified through version control friendly\n`, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"pods#specifications\"\n  }, `specification files`), `, so let's start with the simplest\npossible specification by putting the following content into the `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `my-pod.yaml`), ` file:`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-yaml\"\n  }, `# yaml-language-server: $schema=https://toit.io/schemas/artemis/pod-specification/v1.json\n\n$schema: https://toit.io/schemas/artemis/pod-specification/v1.json\nname: my-pod\nsdk-version: v2.0.0-alpha.163\nartemis-version: v0.25.0\nmax-offline: 0s\nconnections:\n  - type: wifi\n    ssid: YOUR WIFI SSID\n    password: YOUR WIFI PASSWORD\ncontainers: {}\n`)), mdx(\"p\", null, `The first line is a comment and not required. It helps vscode to find the correct\nschema for the file. If the yaml extension is installed, you will get code\ncompletion and diagnostics this way.`), mdx(\"p\", null, `If you fill in your WiFi credentials, you have a working specification for a pod\nnamed `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `my-pod`), `. To make the pod available to your fleet, you will need to upload\nit to your broker:`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, `artemis pod upload my-pod.yaml\n`)), mdx(\"p\", null, `This uploads `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `my-pod`), ` and gives is a few useful tags, so we can find it later. The\nfleet has a `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `default`), ` `, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/getstarted/fleet/groups\"\n  }, `group of devices`), ` and in the `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `fleet.json`), ` file, we can specify\nthat the group uses `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `my-pod@latest`), ` as its pod. Whenever we upload a pod, its `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `latest`), `\ntag is automatically updated, so it can be convenient to just refer to that from\nthe group:`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-json\"\n  }, `{\n  ...\n  \"groups\": {\n    \"default\": {\n      \"pod\": \"my-pod@latest\"\n    }\n  }\n}\n`)), mdx(Note, {\n    mdxType: \"Note\"\n  }, mdx(\"p\", null, `Instead of using the convenient `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `latest`), ` tag, it is often preferable to use tags that do not\nchange in the `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `fleet.json`), ` file. This makes it possible to reproduce and reason about the\nfleet state at any revision of the `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `fleet.json`), ` file. So instead of using `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `my-pod@latest`), `,\nyou can use a stable tag like `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `my-pod@v1.0.2`), ` or `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `my-pod@20230515175710-broad-method`), `.`)), mdx(\"p\", null, `To get your functionality onto your device, you flash a device with firmware\n`, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `my-pod@latest`), ` by running:`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, `artemis serial flash --port /dev/ttyUSB0\n`)), mdx(\"p\", null, `This flashes the device over the USB serial port and puts both the Toit\nplatform and the Artemis service onto the device. Once flashed, you\ncan follow the behavior of your device by monitoring the serial port\nusing something like `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `jag monitor`), `\n(included with `, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../device#2-install-jaguar\"\n  }, `Jaguar`), `). It\nshows something like this:`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-text\"\n  }, `rst:0x5 (DEEPSLEEP_RESET),boot:0x13 (SPI_FAST_FLASH_BOOT)\nconfigsip: 0, SPIWP:0xee\nclk_drv:0x00,q_drv:0x00,d_drv:0x00,cs0_drv:0x00,hd_drv:0x00,wp_drv:0x00\nmode:DIO, clock div:2\nload:0x3fff0030,len:184\nload:0x40078000,len:12700\nho 0 tail 12 room 4\nload:0x40080400,len:2916\nentry 0x400805c4\n[toit] INFO: starting <v2.0.0-alpha.69>\n[toit] INFO: using SPIRAM for heap metadata.\n[artemis] INFO: starting {device: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx}\n[artemis.scheduler] INFO: job started {job: synchronize}\n[artemis.synchronize] INFO: connecting\n[wifi] DEBUG: connecting\n[wifi] DEBUG: connected\n[wifi] INFO: network address dynamically assigned through dhcp {ip: 192.168.86.31}\n[wifi] INFO: dns server address dynamically assigned through dhcp {ip: [192.168.86.1]}\n[network] INFO: opened\n[artemis.synchronize] INFO: connected to network\n[artemis.synchronize] INFO: connected to broker\n[artemis.synchronize] INFO: synchronized\n`)), mdx(\"p\", null, `Once you see that the device succesfully connect to the cloud, you should\nbe ready to check its state:`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, `artemis device show\n`)), mdx(\"p\", null, `Artemis also added your device to your fleet as part of running `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `artemis serial flash`), `,\nso you can now check the status of your entire fleet by running:`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, `artemis fleet status\n`)), mdx(\"p\", null, `Great! With a little help from the Artemis service and developer tooling,\nyou have a cloud-managed device capable of running high-level code.`), mdx(\"h2\", {\n    \"id\": \"tinkering-with-your-device\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#tinkering-with-your-device\",\n    \"aria-label\": \"tinkering with your device permalink\",\n    \"className\": \"table-of-contents-icon before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), `Tinkering with your device`), mdx(\"p\", null, `Artemis allows you to change and tinker with the current state of a device\nwithout requiring a full firmware update. This makes it possible to change\nthe behavior of a device by adding new functionality (drivers or applications)\nor by changing configurations.`), mdx(\"p\", null, `Such incremental changes are great for development; especially as they are faster\nto get onto the device and do not even require restarting the device. However,\nthese changes are lost at the next firmware upgrade.`), mdx(\"h3\", {\n    \"id\": \"controlling-synchronization\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#controlling-synchronization\",\n    \"aria-label\": \"controlling synchronization permalink\",\n    \"className\": \"table-of-contents-icon before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), `Controlling synchronization`), mdx(\"p\", null, `Devices managed by Artemis need to connect to the cloud to receive updated information.\nThe frequency at which they synchronize can be configured by the user.`), mdx(\"p\", null, `Devices that connect frequently or all the time are easy\nto interact with and manage, but they spend a lot of power on staying connected\nall the time. The pod specification in the example `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `my-pod.yaml`), ` does not specify\nhow often to connect, so Artemis assumes that you want an interactive device.`), mdx(\"p\", null, `If you don't need your device to stay connected all the time, you can\ngive it a 'max-offline' setting. This tells the Artemis service that it is\nokay to be offline for 5m, 1h30m, or 24h without necessarily connecting to the\nInternet.`), mdx(\"p\", null, `You can set this through:`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, `artemis device set-max-offline 1m19s\n`)), mdx(\"p\", null, `If you monitor the output of your device, you'll see that the device goes\nto sleep between its cloud synchronizations.`), mdx(\"p\", null, `You can go back to the original setting, where the device tries to\nstay online all the time by giving it a 'max-offline' setting of 0s:`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, `artemis device set-max-offline 0s\n`)), mdx(\"h3\", {\n    \"id\": \"installing-code\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#installing-code\",\n    \"aria-label\": \"installing code permalink\",\n    \"className\": \"table-of-contents-icon before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), `Installing code`), mdx(\"p\", null, `Artemis makes it easy to install and uninstall new code on your devices.\nThe code that you install runs in containers, so they are isolated from\nthe rest of the system and can be started and stopped independently of\nthe other parts of the system.`), mdx(\"p\", null, `To install new code on your device, you can install a new named container\nbased on a Toit source file:`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, `artemis device container install hello hello.toit\n`)), mdx(\"p\", null, `The container name `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `hello`), ` does not have to match the source file\nname `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `hello.toit`), ` and you will use the container name to refer to\nthe installed container later. There can only be one container with\na given name on a device, so installing another one will replace\nthe original.`), mdx(\"p\", null, `By default containers will run when installed and whenever the\ndevice boots, but you can control this behavior by specifying the\ntriggers on the command line. If you `, mdx(\"em\", {\n    parentName: \"p\"\n  }, `only`), ` want to run when booting,\nyou can do:`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, `artemis device container install --trigger boot hello hello.toit\n`)), mdx(\"p\", null, `You can also get Artemis to run your containers on a schedule\nby triggering them at a specified interval. As an example, you can\ninstall the `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `hello`), ` container and get it to run every 10s\nlike this:`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, `artemis device container install --trigger interval:10s hello hello.toit\n`)), mdx(\"p\", null, `Any arguments you pass to `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `artemis device container install`), ` after the\nsource file will be passed as string arguments to `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `main`), `. If you put\nthis in `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `args.toit`), `:`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, `main args:\n  print \"arguments = $args\"\n`)), mdx(\"p\", null, `and run:`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, `artemis device container install args args.toit foo bar\n`)), mdx(\"p\", null, `you should see `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `arguments = [foo, bar]`), ` printed.`), mdx(\"p\", null, `Finally, you can always uninstall a container again using:`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, `artemis device container uninstall hello\nartemis device container uninstall args\n`)), mdx(\"h2\", {\n    \"id\": \"updating-a-single-device\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#updating-a-single-device\",\n    \"aria-label\": \"updating a single device permalink\",\n    \"className\": \"table-of-contents-icon before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), `Updating a single device`), mdx(\"p\", null, `If you want to update to a new version of the Toit SDK or benefit from the\nlatest Artemis release, you can do an over-the-air firmware update. Such\nupdates are pushed to the broker in a compressed form and picked up by the\ndevice.`), mdx(\"p\", null, `Similar to `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `artemis serial flash`), `, the over-the-air update command also\nuses pods, so the common workflow is to change your pod specification file\nto reflect the state you want your device in, and then update it to\nthat through:`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, `artemis pod upload my-pod.yaml\nartemis device update my-pod@latest\n`)), mdx(\"p\", null, `You can specify which device to update using a device-id flag (`, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `-d`), `), but most\nof the time you just use the default ID that was either set\nduring flashing, or that can be set with `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `artemis device default`), `.`), mdx(\"h2\", {\n    \"id\": \"rolling-out-changes-to-a-fleet\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#rolling-out-changes-to-a-fleet\",\n    \"aria-label\": \"rolling out changes to a fleet permalink\",\n    \"className\": \"table-of-contents-icon before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), `Rolling out changes to a fleet`), mdx(\"p\", null, `If you've modified the `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `my-pod.yaml`), ` file and you want to make the changes available\nto your fleet of devices, you can upload the latest version of your pod using:`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, `artemis pod upload my-pod.yaml\n`)), mdx(\"p\", null, `If your `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `fleet.json`), ` uses `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `my-pod@latest`), `, you can ask the fleet\nto roll out the changes to your devices using:`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, `artemis fleet roll-out\n`)), mdx(\"p\", null, `If you changed the pod reference in `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `fleet.json`), ` to use a stable tag, then\nyou need to update that before you run `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `artemis fleet roll-out`), `:`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, `artemis fleet group update --tag v1.0.3\n`)), mdx(\"p\", null, `Because your pods encapsulate the fully configured firmware, this makes\nit easy to upgrade your containers, the Artemis service, and even the Toit SDK\nand its associated virtual machine.`));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#manage-your-fleet","title":"Manage your fleet"},{"url":"#installation","title":"Installation","items":[{"url":"#git","title":"Git"},{"url":"#signing-up-and-logging-in","title":"Signing up and logging in"},{"url":"#creating-an-organization","title":"Creating an organization"}]},{"url":"#getting-started","title":"Getting started","items":[{"url":"#first-steps","title":"First steps"},{"url":"#tinkering-with-your-device","title":"Tinkering with your device","items":[{"url":"#controlling-synchronization","title":"Controlling synchronization"},{"url":"#installing-code","title":"Installing code"}]},{"url":"#updating-a-single-device","title":"Updating a single device"},{"url":"#rolling-out-changes-to-a-fleet","title":"Rolling out changes to a fleet"}]}]}}},"pageContext":{"title":"Manage your fleet","id":"c966ca15-6dc4-5421-92a4-e9dc7d8c0e89"}},
    "staticQueryHashes": ["2197327828"]}