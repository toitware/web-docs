{
    "componentChunkName": "component---src-components-layout-mdx-layout-tsx",
    "path": "/getstarted/device",
    "result": {"data":{"site":{"siteMetadata":{"title":"Toit documentation"}},"mdx":{"body":"const _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nconst _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return mdx(\"div\", props);\n};\n\nconst NonZoomableImage = makeShortcode(\"NonZoomableImage\");\nconst Tabs = makeShortcode(\"Tabs\");\nconst Tab = makeShortcode(\"Tab\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  let {\n    components\n  } = _ref,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"run-on-your-device\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h1\",\n    \"href\": \"#run-on-your-device\",\n    \"aria-label\": \"run on your device permalink\",\n    \"className\": \"table-of-contents-icon before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), `Run on your device`), mdx(\"p\", null, `This short guide shows how to install Toit, flash the Toit firmware on your `, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.espressif.com/en/products/socs/esp32\"\n  }, `ESP32`), `,\nsetup your local development environment, and finally deploy a Toit application on your ESP32 over-the-air.`), mdx(\"p\", null, `It uses the open-source Jaguar service to enable live reloading when developing for the ESP32. You\ncan watch a short video that shows how you can experience Jaguar on your ESP32 in two minutes:`), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://youtu.be/cU7zr6_YBbQ\"\n  }, mdx(NonZoomableImage, {\n    src: JaguarVideo,\n    alt: \"Video presentation of Jaguar\",\n    mdxType: \"NonZoomableImage\"\n  }))), mdx(\"p\", null, `Ready to try this yourself?`), mdx(\"h2\", {\n    \"id\": \"1-get-an-esp32\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#1-get-an-esp32\",\n    \"aria-label\": \"1 get an esp32 permalink\",\n    \"className\": \"table-of-contents-icon before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), `1. Get an ESP32`), mdx(\"p\", null, `If you already have an ESP32 available, jump to step 2 to continue. Otherwise, you can buy one at `, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.digikey.com\"\n  }, `digikey`), `, or\nany other electronics distributor. Any board that contains a standard ESP32 chip (like the WROOM or WROVER) should be fine.\nIf you have doubts, don't hesitate to ask for guidance on our `, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://chat.toit.io/\"\n  }, `Discord chat`), `.`), mdx(\"h2\", {\n    \"id\": \"2-install-jaguar\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#2-install-jaguar\",\n    \"aria-label\": \"2 install jaguar permalink\",\n    \"className\": \"table-of-contents-icon before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), `2. Install Jaguar`), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/toitlang/jaguar\"\n  }, `Jaguar`), ` is a small, open-source Toit application that runs on your ESP32. It comes\nwith command line tooling to make it easy to tinker with Toit code on your device.`), mdx(\"p\", null, `The following describes how to install a precompiled version of Jaguar,\nincluding a prebuilt firmware image that is suitable for most ESP32s.  If you need to\nbuild from source, see the instructions at `, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/toitlang/jaguar#building-it-yourself\"\n  }, `GitHub`), `.`), mdx(Tabs, {\n    mdxType: \"Tabs\"\n  }, mdx(Tab, {\n    label: \"Windows\",\n    mdxType: \"Tab\"\n  }, mdx(\"p\", null, `On Windows 10+ simply open powershell, and run:`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-shell\"\n  }, `winget install --id=Toit.Jaguar -e\n`)), mdx(\"p\", null, `For older Windows versions, download and install Jaguar from\n`, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/toitlang/jaguar/releases/latest/download/jag_installer.exe\"\n  }, `here`), `.`)), mdx(Tab, {\n    label: \"macOS\",\n    mdxType: \"Tab\"\n  }, mdx(\"p\", null, `You can use `, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://brew.sh/\"\n  }, `Homebrew`), ` to install Jaguar as follows:`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-shell\"\n  }, `brew install toitlang/toit/jag\n`)), mdx(\"p\", null, `Or you can download and install Jaguar manually from\n`, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/toitlang/jaguar/releases/latest/download/jag.dmg\"\n  }, `here`), `.`)), mdx(Tab, {\n    label: \"Linux\",\n    mdxType: \"Tab\"\n  }, mdx(\"p\", null, `On Archlinux there is an AUR package, which can be installed with:`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-shell\"\n  }, `yay install jaguar-bin\n`)), mdx(\"p\", null, `Or download the precompiled binary from `, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/toitlang/jaguar/releases/latest/download/jag_linux.tgz\"\n  }, `here`), `.`))), mdx(\"p\", null, `Run the command `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `jag setup`), ` after installation to finish the setup of Jaguar. This step downloads\nthe `, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/toitlang/toit\"\n  }, `Toit SDK`), ` and the suitable firmware images.`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, `jag setup\n`)), mdx(\"h2\", {\n    \"id\": \"3-flash-your-device\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#3-flash-your-device\",\n    \"aria-label\": \"3 flash your device permalink\",\n    \"className\": \"table-of-contents-icon before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), `3. Flash your device`), mdx(\"p\", null, `Now it is time to connect your ESP32 with a serial cable to your computer and put the Jaguar\napplication onto it. Running `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `jag flash`), ` will ask you for the serial port to use and the WiFi\ncredentials, but be aware that the tooling requires\n`, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/toitlang/jaguar#permission-to-access-serial-port\"\n  }, `permission to access your serial port`), `.`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, `jag flash\n`)), mdx(\"p\", null, `If you want to avoid typing the WiFi credentials every time you flash, you can store\nthem in Jaguar's config file with:`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, `jag config wifi set --wifi-ssid SSID --wifi-password PASSWORD\n`)), mdx(\"p\", null, `After flashing, your device boots up and starts the Toit virtual machine. The Jaguar service on\nthe device starts a small HTTP server that listens for incoming requests. You can follow along\nby monitoring the serial output of the device:`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, `jag monitor\n`)), mdx(\"p\", null, `Once the serial output shows that your ESP32 runs the Jaguar application, it will start announcing\nits presence to the network using UDP broadcast. You can find a device by scanning, but this requires\nyou to be on the same local network as your ESP32:`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, `jag scan\n`)), mdx(\"p\", null, `Having issues? Get help in the `, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../../support\"\n  }, `support`), ` section, or contact us in\nour `, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://chat.toit.io/\"\n  }, `Discord chat`), `. We have some experience with flashing devices,\nand we are happy to help.`), mdx(\"h2\", {\n    \"id\": \"4-run-code-via-wifi\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#4-run-code-via-wifi\",\n    \"aria-label\": \"4 run code via wifi permalink\",\n    \"className\": \"table-of-contents-icon before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), `4. Run code via WiFi`), mdx(\"p\", null, `With the scanning complete, you're ready to run your first Toit program on your Jaguar-enabled\nESP32 device. Create a file `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `hello.toit`), ` with the following content:`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, `main:\n  while true:\n    print \"Hello, World!\"\n    sleep --ms=3000\n`)), mdx(\"p\", null, `and then run it using:`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, `jag run hello.toit\n`)), mdx(\"p\", null, `At this stage you won't see anything unless you're still monitoring the serial output\n(normally connected to your computer via USB). Use `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `jag monitor --attach`), ` to start\nlistening to the serial output. The `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `--attach`), ` flag is to make sure we don't reboot\nthe device. You should start seeing the \"Hello, World!\" messages printed out.`), mdx(\"p\", null, `Jaguar also has a convenient feature where it keeps watching your Toit code on disk\nand `, mdx(\"em\", {\n    parentName: \"p\"\n  }, `live reloads`), ` it whenever the file changes. Simply write:`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, `jag watch hello.toit\n`)), mdx(\"p\", null, `and edit `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `hello.toit`), ` or any of the files it depends on in your favorite editor.`), mdx(\"h2\", {\n    \"id\": \"5-install-a-container\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#5-install-a-container\",\n    \"aria-label\": \"5 install a container permalink\",\n    \"className\": \"table-of-contents-icon before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), `5. Install a container`), mdx(\"p\", null, `With `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `jag run`), ` a program is only run once, and disappears when the device is rebooted. Jaguar supports\ninstalling named containers that are automatically run when the system boots. They can be used\nto provide services and implement drivers for peripherals. The services and drivers can be used by\napplications and as such they form an instrumental part of the extensibility of a Jaguar based system.`), mdx(\"p\", null, `To install the `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `hello.toit`), ` program as a container, use:`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, `jag container install hello hello.toit\n`)), mdx(\"p\", null, `After this the program is also run every time the device reboots. You can also list the currently installed\ncontainers on a device through:`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, `jag container list\n`)), mdx(\"p\", null, `This results in a list that shows the container image ids and the associated names.`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-txt\"\n  }, `$ jag container list\n85c64060-ffbd-5e04-a0dd-252d5bbf4a32: hello\n4e9a12bc-7f07-5118-9f04-8ad2bbe476d1: jaguar\n`)), mdx(\"h2\", {\n    \"id\": \"6-install-visual-studio-code\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#6-install-visual-studio-code\",\n    \"aria-label\": \"6 install visual studio code permalink\",\n    \"className\": \"table-of-contents-icon before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), `6. Install Visual Studio Code`), mdx(\"p\", null, `The Toit SDK used by Jaguar comes with support for `, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://code.visualstudio.com/download\"\n  }, `Visual Studio Code`), `.\nOnce installed, you can add the `, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://marketplace.visualstudio.com/items?itemName=toit.toit\"\n  }, `Toit language extension`), `\nand get full language support for Toit, including syntax highlighting, integrated static analysis, and code completions.\nJaguar already comes with everything you need, so if you can run `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `jag`), ` from your `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `PATH`), `, the extension will automatically\nfind the Toit SDK downloaded by Jaguar and use that.`), mdx(\"h2\", {\n    \"id\": \"7-whats-next\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#7-whats-next\",\n    \"aria-label\": \"7 whats next permalink\",\n    \"className\": \"table-of-contents-icon before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), `7. What's next?`), mdx(\"p\", null, `Congratulations! You are now ready to start developing applications using Toit. Next step, look in the `, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../../tutorials\"\n  }, `tutorials`), ` or\ndive into the `, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../../language\"\n  }, `Toit language guide`), `. If you want to orchestrate your devices through the cloud, you can use\n`, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../fleet\"\n  }, `Artemis`), ` to safely and scalably manage your firmware, containers, and configurations with ease.`));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#run-on-your-device","title":"Run on your device","items":[{"url":"#1-get-an-esp32","title":"1. Get an ESP32"},{"url":"#2-install-jaguar","title":"2. Install Jaguar"},{"url":"#3-flash-your-device","title":"3. Flash your device"},{"url":"#4-run-code-via-wifi","title":"4. Run code via WiFi"},{"url":"#5-install-a-container","title":"5. Install a container"},{"url":"#6-install-visual-studio-code","title":"6. Install Visual Studio Code"},{"url":"#7-whats-next","title":"7. What's next?"}]}]}}},"pageContext":{"title":"Run on your device","id":"e82eb3a5-1abe-5e8e-a00d-0c180a875680"}},
    "staticQueryHashes": ["2197327828"]}