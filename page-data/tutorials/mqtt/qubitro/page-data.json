{
    "componentChunkName": "component---src-components-layout-mdx-layout-tsx",
    "path": "/tutorials/mqtt/qubitro",
    "result": {"data":{"site":{"siteMetadata":{"title":"Toit documentation"}},"mdx":{"body":"const _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nconst _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return mdx(\"div\", props);\n};\n\nconst Note = makeShortcode(\"Note\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  let {\n    components\n  } = _ref,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"mqtt-with-qubitro\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h1\",\n    \"href\": \"#mqtt-with-qubitro\",\n    \"aria-label\": \"mqtt with qubitro permalink\",\n    \"className\": \"table-of-contents-icon before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), `MQTT with Qubitro`), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.qubitro.com\"\n  }, `Qubitro`), ` is a device data platform with an MQTT endpoint.\nThe broker can be used freely for a limited number of devices.`), mdx(\"h2\", {\n    \"id\": \"prerequisites\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#prerequisites\",\n    \"aria-label\": \"prerequisites permalink\",\n    \"className\": \"table-of-contents-icon before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), `Prerequisites`), mdx(\"p\", null, `We assume that you have set up your development environment as described\nin `, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../../setup/ide\"\n  }, `the IDE tutorial`), `.`), mdx(\"p\", null, `We also assume that you have flashed your device with Jaguar and that\nyou are familiar with running Toit programs on it.\nIf not, have a look at the `, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../../setup/firstprogram\"\n  }, `Hello world`), ` tutorial.`), mdx(\"p\", null, `While not necessary, we recommend to do the `, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"..\"\n  }, `MQTT tutorial`), ` first. Similarly,\nyou might want to read the `, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../../containers/services\"\n  }, `services`), ` tutorial.`), mdx(\"h2\", {\n    \"id\": \"packages\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#packages\",\n    \"aria-label\": \"packages permalink\",\n    \"className\": \"table-of-contents-icon before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), `Packages`), mdx(\"p\", null, `Instead of using the MQTT package directly, we are going to use the\n`, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://pkg.toit.io/package/github.com%2Fkasperl%2Ftoit-qubitro\"\n  }, `qubitro`), `\npackage. It provides a service-oriented interface to the Qubitro MQTT broker.`), mdx(\"p\", null, `See the `, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../../setup/packages\"\n  }, `packages`), ` tutorial for details on how to\ninstall packages.`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-shell\"\n  }, `jag pkg install github.com/kasperl/toit-qubitro@v0.4\n`)), mdx(Note, {\n    mdxType: \"Note\"\n  }, mdx(\"p\", null, `You can probably just write `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `jag pkg install qubitro`), `, but the full ID together\nwith the version is more explicit, and will make sure you get the same package\nas used in this tutorial.`)), mdx(\"h2\", {\n    \"id\": \"qubitro\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#qubitro\",\n    \"aria-label\": \"qubitro permalink\",\n    \"className\": \"table-of-contents-icon before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), `Qubitro`), mdx(\"p\", null, `To use Qubitro, you need to create an account. Roughly you have to do\nthe following:`), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, `Go to `, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://qubitro.com\"\n  }, `qubitro.com`), `:`), mdx(\"li\", {\n    parentName: \"ul\"\n  }, `Get started -- it's free.`), mdx(\"li\", {\n    parentName: \"ul\"\n  }, `Sign up.`), mdx(\"li\", {\n    parentName: \"ul\"\n  }, `Complete the verification of your email.`)), mdx(\"p\", null, `Then create a new project with an MQTT source:`), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, `In the \"Projects\" tab, click on \"New Project\" and create a new project.`), mdx(\"li\", {\n    parentName: \"ul\"\n  }, `Click on the new project.`), mdx(\"li\", {\n    parentName: \"ul\"\n  }, `Click on \"New Source\" and pick \"MQTT\".`), mdx(\"li\", {\n    parentName: \"ul\"\n  }, `Fill in the data. All fields are required but can be changed later.`), mdx(\"li\", {\n    parentName: \"ul\"\n  }, `Click on the device.`), mdx(\"li\", {\n    parentName: \"ul\"\n  }, `Click on the \"Connection details\".`), mdx(\"li\", {\n    parentName: \"ul\"\n  }, `Copy out the username and password. You will need them later.`)), mdx(\"h2\", {\n    \"id\": \"code\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#code\",\n    \"aria-label\": \"code permalink\",\n    \"className\": \"table-of-contents-icon before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), `Code`), mdx(\"p\", null, `Qubitro can be used like any other MQTT broker. However, in this tutorial we\nare using the Qubitro package which encapsulates the MQTT client into a service\nthat can be accessed through RPC calls. This has the advantage that the\ncode is smaller, and that multiple different containers can use the same\nclient without needing to establish a new connection for each container.`), mdx(\"p\", null, `Start a new Toit program `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `qubitro.toit`), ` and add the following code:`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-toit\"\n  }, `import qubitro\nimport qubitro.service\n\nmain:\n  // Start the Qubitro service.\n  service.main\n\n  // Connect to the service and publish through it.\n  client ::= qubitro.connect\n  client.publish { \"MyData\": random 1000 }\n`)), mdx(\"p\", null, `Note that we haven't specified the username and password in the code. We are\nproviding it through Jaguar defines. Launch the program as follows:`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-shell\"\n  }, `jag run \\\\\n    -Dqubitro.device.id=<YOUR-USER-NAME> \\\\\n    -Dqubitro.device.token=<YOUR-PASSWORD> \\\\\n    qubitro.toit\n`)), mdx(\"p\", null, `You should see a new value appear in the storage tab of the device.`), mdx(Note, {\n    mdxType: \"Note\"\n  }, mdx(\"p\", null, `The `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `-D`), ` flag only works for `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `run`), `, but not for `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `watch`), `. It is also not\nsupported for `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `-d host`), `. If you want to use Qubitro without an ESP32 device\nyou can either modify the `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `qubitro`), ` package, or use the `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `mqtt`), ` package directly.`)), mdx(\"h3\", {\n    \"id\": \"running-the-qubitro-service-in-a-separate-container\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#running-the-qubitro-service-in-a-separate-container\",\n    \"aria-label\": \"running the qubitro service in a separate container permalink\",\n    \"className\": \"table-of-contents-icon before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), `Running the Qubitro service in a separate container`), mdx(\"p\", null, `So far we have been running the Qubitro service in the same container as the\nmain program. However, it is possible to run the service in a separate container\nand access it through RPC calls. This is useful if you have multiple containers\nthat need to access the same Qubitro client.`), mdx(\"p\", null, `Create a new file `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `qubitro-service.toit`), ` with the following code:`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-toit\"\n  }, `import qubitro.service\n\nmain:\n  // Start the Qubitro service.\n  service.main\n`)), mdx(\"p\", null, `We can install the service as a container as follows:`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-shell\"\n  }, `jag container install \\\\\n    -Dqubitro.device.id=<YOUR-USER-NAME> \\\\\n    -Dqubitro.device.token=<YOUR-PASSWORD> \\\\\n    qubitro qubitro-service.toit\n`)), mdx(\"p\", null, `At the same time we need to modify the `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `qubitro.toit`), ` program to remove the\nservice start:`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, `import qubitro\n\nmain:\n  client ::= qubitro.connect\n  client.publish { \"MyData\": random 1000 }\n`)), mdx(\"p\", null, `We can now run the program without needing the defines:`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-shell\"\n  }, `jag run qubitro.toit\n`)), mdx(\"p\", null, `In fact, we can now `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `jag watch`), ` the file and execute it as soon as we save it.`), mdx(\"h2\", {\n    \"id\": \"qubitro-dashboards\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#qubitro-dashboards\",\n    \"aria-label\": \"qubitro dashboards permalink\",\n    \"className\": \"table-of-contents-icon before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), `Qubitro dashboards`), mdx(\"p\", null, `One nice feature of Qubitro is the possibility to create dashboards that\nvisualize the published data. The following is just an example that uses\nsome values that were published while writing this tutorial:`), mdx(\"img\", {\n    src: QubitroDashboard,\n    alt: \"Qubitro dashboard\",\n    style: {\n      \"width\": \"100%\",\n      \"maxWidth\": \"600px\",\n      \"margin\": \"20px auto\"\n    }\n  }), mdx(\"p\", null, `You can follow Qbitro's `, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.qubitro.com/platform/dashboards\"\n  }, `dashboard documentation`), `\nif you want to create your own dashboard.`));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#mqtt-with-qubitro","title":"MQTT with Qubitro","items":[{"url":"#prerequisites","title":"Prerequisites"},{"url":"#packages","title":"Packages"},{"url":"#qubitro","title":"Qubitro"},{"url":"#code","title":"Code","items":[{"url":"#running-the-qubitro-service-in-a-separate-container","title":"Running the Qubitro service in a separate container"}]},{"url":"#qubitro-dashboards","title":"Qubitro dashboards"}]}]}}},"pageContext":{"title":"MQTT with Qubitro","id":"a721adbc-78d3-5ace-9284-a582c0bbe98c"}},
    "staticQueryHashes": ["2197327828"]}