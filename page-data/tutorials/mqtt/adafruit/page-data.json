{
    "componentChunkName": "component---src-components-layout-mdx-layout-tsx",
    "path": "/tutorials/mqtt/adafruit",
    "result": {"data":{"site":{"siteMetadata":{"title":"Toit documentation"}},"mdx":{"body":"const _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nconst _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return mdx(\"div\", props);\n};\n\nconst Note = makeShortcode(\"Note\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  let {\n    components\n  } = _ref,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"mqtt-with-adafruit\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h1\",\n    \"href\": \"#mqtt-with-adafruit\",\n    \"aria-label\": \"mqtt with adafruit permalink\",\n    \"className\": \"table-of-contents-icon before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), `MQTT with Adafruit`), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.adafruit.com\"\n  }, `Adafruit`), ` is an open-source hardware company that is\npopular among the maker community. One of their services is\n`, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://io.adafruit.com\"\n  }, `Adafruit IO`), `, which is a MQTT broker.`), mdx(\"p\", null, `The broker has a free tier with some restrictions. It is perfectly\nusable for makers with few devices.`), mdx(\"h2\", {\n    \"id\": \"prerequisites\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#prerequisites\",\n    \"aria-label\": \"prerequisites permalink\",\n    \"className\": \"table-of-contents-icon before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), `Prerequisites`), mdx(\"p\", null, `We assume that you have set up your development environment as described\nin `, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../../setup/ide\"\n  }, `the IDE tutorial`), `.`), mdx(\"p\", null, `We also assume that you have flashed your device with Jaguar and that\nyou are familiar with running Toit programs on it.\nIf not, have a look at the `, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../../setup/firstprogram\"\n  }, `Hello world`), ` tutorial.`), mdx(\"p\", null, `While not necessary, we recommend to do the `, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"..\"\n  }, `MQTT tutorial`), ` first.`), mdx(\"p\", null, `Note that you can do this tutorial without a device. In that case,\nyou need to use the `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `-d host`), ` option whenever you invoke\n`, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `jag run`), `. The program will then run on your computer instead of on\na device.`), mdx(\"h2\", {\n    \"id\": \"packages\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#packages\",\n    \"aria-label\": \"packages permalink\",\n    \"className\": \"table-of-contents-icon before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), `Packages`), mdx(\"p\", null, `The MQTT functionality is not part of the core libraries and must be\nimported as a package. See the `, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../../setup/packages\"\n  }, `packages`), `\ntutorial for details.`), mdx(\"p\", null, `We are using the `, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://pkg.toit.io/package/github.com%2Ftoitware%2Fmqtt@v2\"\n  }, `mqtt`), `\npackage. To install it, run the following command:`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-shell\"\n  }, `jag pkg install github.com/toitware/mqtt@v2\n`)), mdx(\"p\", null, `When connecting to TLS secured services we will also use the\n`, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://pkg.toit.io/package/github.com%2Ftoitware%2Ftoit-cert-roots@v1\"\n  }, `certificate-roots`), `\npackage:`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-shell\"\n  }, `jag pkg install github.com/toitware/toit-cert-roots@v1\n`)), mdx(\"h2\", {\n    \"id\": \"adafruit-io\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#adafruit-io\",\n    \"aria-label\": \"adafruit io permalink\",\n    \"className\": \"table-of-contents-icon before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), `Adafruit IO`), mdx(\"p\", null, `To use Adafruit IO, you need to create an account. Go to\n`, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://io.adafruit.com\"\n  }, `io.adafruit.com`), ` and create an account.`), mdx(\"p\", null, `Once you have created an account, you need to create a feed. Feeds\nare topics that you can publish to and subscribe from.\nGo to `, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://io.adafruit.com/feeds\"\n  }, `io.adafruit.com/feeds`), ` and click on\nthe \"`, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `+`), ` New Feed\" button to create a new feed. For this tutorial we\nwill use the feed `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `temperature`), `.`), mdx(\"p\", null, `Click on the \"AIO Key\" button on the top right of the page (next to\n\"`, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `+`), ` New Device\"). This opens a dialog with your AIO key.`), mdx(\"img\", {\n    src: AioKey,\n    alt: \"Screenshot of the AIO key button\"\n  }), mdx(\"p\", null, `Copy the username and key. You will need them later.`), mdx(\"h2\", {\n    \"id\": \"code\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#code\",\n    \"aria-label\": \"code permalink\",\n    \"className\": \"table-of-contents-icon before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), `Code`), mdx(\"p\", null, `The following code connects to Adafruit IO and publishes a message\nevery 2.5 seconds. The message goes to the feed `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `temperature`), ` and\nwill thus be a simple number. The number is a simulated temperature\nreading, and will randomly fluctuate (starting at 25°C).`), mdx(\"p\", null, `Don't forget to replace `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `<YOUR_USERNAME>`), ` and `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `<YOUR_KEY>`), ` with your\nusername and key. If you created a feed with a different name, you\nalso need to change the `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `ADAFRUIT-IO-FEEDNAME`), ` constant.`), mdx(\"p\", null, `We will leave the `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `CLIENT-ID`), ` empty. This means that the broker will\ngenerate a random client ID for us. It also resets the session with\nevery connection. If you want to take full advantage of the broker,\nyou should use a persistent client ID. See the `, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"..\"\n  }, `MQTT tutorial`), `\nfor details.`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-toit\"\n  }, `import certificate-roots\nimport mqtt\n\nADAFRUIT-IO-USERNAME ::= \"<YOUR_USERNAME>\"\nADAFRUIT-IO-KEY ::= \"<YOUR_KEY>\"\n\nADAFRUIT-IO-FEEDNAME ::= \"temperature\"\n\nADAFRUIT-IO-HOST ::= \"io.adafruit.com\"\n\nCLIENT-ID ::= \"\"\n\nmain:\n  certificate-roots.install-common-trusted-roots\n\n  client := mqtt.Client.tls --host=ADAFRUIT-IO-HOST\n  /**\n  // Alternatively, you can also connect without TLS, by using the\n  // following client constructor:\n  client := mqtt.Client --host=ADAFRUIT-IO-HOST\n  // In that case you can remove the \\`certificate-roots\\` import and\n  // avoid calling \\`certificate-roots.install-common-trusted-roots\\`.\n  */\n\n  options := mqtt.SessionOptions\n    --client-id = CLIENT-ID\n    --username = ADAFRUIT-IO-USERNAME\n    --password = ADAFRUIT-IO-KEY\n\n  client.start --options=options\n\n  print \"Connected to broker\"\n\n  topic := \"$ADAFRUIT-IO-USERNAME/feeds/$ADAFRUIT-IO-FEEDNAME\"\n\n  // Simulates a temperature sensor.\n  temperature := 25.0\n  10.repeat:\n    temperature += ((random 100) - 50) / 100.0\n    client.publish topic \"$temperature\"\n    // Don't publish too often to avoid rate limiting.\n    sleep --ms=2_500\n\n  client.close\n`)), mdx(\"p\", null, `You can see the published values on\n`, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `https://io.adafruit.com/<ADAFRUIT_IO_USERNAME>/feeds/temperature`), `.`), mdx(Note, {\n    mdxType: \"Note\"\n  }, mdx(\"p\", null, `It is not good practice to hard-code credentials in your program.\nSee the `, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../../misc/secrets\"\n  }, `secrets`), ` tutorial for details on how to\nhandle secrets in Toit projects.`)), mdx(\"h2\", {\n    \"id\": \"adafruit-io-features\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#adafruit-io-features\",\n    \"aria-label\": \"adafruit io features permalink\",\n    \"className\": \"table-of-contents-icon before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), `Adafruit IO features`), mdx(\"p\", null, `In this tutorial we only publish messages to Adafruit IO. However,\nAdafruit IO also supports many other features: You can, obviously,\nalso subscribe to feeds. You can also create dashboards and\nvisualize your data. You can also create triggers that send you\nemails or text messages when certain conditions are met.`), mdx(\"p\", null, `The `, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://learn.adafruit.com/welcome-to-adafruit-io\"\n  }, `Adafruit IO documentation`), `\ncontains a lot of information about the service.`), mdx(\"p\", null, `For MQTT specific information, see\n`, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://io.adafruit.com/api/docs/mqtt.html\"\n  }, `Adafruit IO MQTT API`), `.`));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#mqtt-with-adafruit","title":"MQTT with Adafruit","items":[{"url":"#prerequisites","title":"Prerequisites"},{"url":"#packages","title":"Packages"},{"url":"#adafruit-io","title":"Adafruit IO"},{"url":"#code","title":"Code"},{"url":"#adafruit-io-features","title":"Adafruit IO features"}]}]}}},"pageContext":{"title":"MQTT with Adafruit","id":"649ca433-2d81-594f-b16b-e350f36ce002"}},
    "staticQueryHashes": ["2197327828"]}