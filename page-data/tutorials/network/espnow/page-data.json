{
    "componentChunkName": "component---src-components-layout-mdx-layout-tsx",
    "path": "/tutorials/network/espnow",
    "result": {"data":{"site":{"siteMetadata":{"title":"Toit documentation"}},"mdx":{"body":"const _excluded = [\"components\"];\n\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\n\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(e); for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\n\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (-1 !== e.indexOf(n)) continue; t[n] = r[n]; } return t; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nconst _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return mdx(\"div\", props);\n};\n\nconst Note = makeShortcode(\"Note\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  let {\n    components\n  } = _ref,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"esp-now\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h1\",\n    \"href\": \"#esp-now\",\n    \"aria-label\": \"esp now permalink\",\n    \"className\": \"table-of-contents-icon before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), `ESP-NOW`), mdx(\"p\", null, `ESP-NOW is a proprietary protocol developed by Espressif for\nlow-power, connection-less communication between ESP32 devices.`), mdx(\"p\", null, `In this tutorial we will set up two ESP32 where one will send\nmessages, and the other will receive them.`), mdx(\"h2\", {\n    \"id\": \"prerequisites\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#prerequisites\",\n    \"aria-label\": \"prerequisites permalink\",\n    \"className\": \"table-of-contents-icon before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), `Prerequisites`), mdx(\"p\", null, `We assume that you have set up your development environment as described\nin `, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../../setup/ide\"\n  }, `the IDE tutorial`), `.`), mdx(\"p\", null, `We also assume that you have flashed your device with Jaguar and that\nyou are familiar with running Toit programs on it.\nIf not, have a look at the `, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../../setup/firstprogram\"\n  }, `Hello world`), ` tutorial.`), mdx(Note, {\n    mdxType: \"Note\"\n  }, mdx(\"p\", null, `When working with two devices, you will need to tell Jaguar which\nUSB port to use.`), mdx(\"p\", null, `When using `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `jag monitor`), ` you have to use the `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `--port`), ` option to specify\nthe port the ESP32 device is connected to. For example:`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-shell\"\n  }, `jag monitor --port COM3          # Windows.\njag monitor --port /dev/ttyUSB0  # Linux and macOS.\n`))), mdx(\"h2\", {\n    \"id\": \"introduction\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#introduction\",\n    \"aria-label\": \"introduction permalink\",\n    \"className\": \"table-of-contents-icon before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), `Introduction`), mdx(\"p\", null, `ESP-NOW can be seen as a replacement for Wifi, where devices don't\nneed to connect to an access point, but can communicate directly with\neach other. Its range is typically better than Wifi, but it has\nlower data rates.`), mdx(\"p\", null, `Devices can either communicate by broadcasting messages to all\ndevices in range, or by sending messages to specific devices using\ntheir MAC address. In both cases, a key can be used to encrypt the\nmessages.`), mdx(\"h2\", {\n    \"id\": \"limitations\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#limitations\",\n    \"aria-label\": \"limitations permalink\",\n    \"className\": \"table-of-contents-icon before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), `Limitations`), mdx(\"p\", null, `Messages are at most 1470 bytes long. For broadcast messages there\nis no guarantee that messages are correctly delivered. For direct\nmessages, the implementation ensures that the PHY layer has\nreceived the message, but there is no guarantee that the message\nis processed by the receiving device.`), mdx(\"p\", null, `ESP-NOW only supports 20 peers, although one peer-slot can be used\nto communicate with all devices in range by specifying the broadcast\naddress.`), mdx(\"p\", null, `By default only 7 keys can be used. This can be changed in the\nsdkconfig, but that requires building a custom envelope.`), mdx(\"p\", null, `In theory, ESP-NOW can run at the same times as Wifi, but Toit\ndoes not currently support this. If Wifi is enabled the following\nerror will be raised when trying to create an ESP-NOW service:`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-plain\"\n  }, `EXCEPTION error.\nALREADY_IN_USE\n  0: espnow-create_            <sdk>/esp32/espnow.toit:336:3\n  ...\n`)), mdx(\"p\", null, `Since Jaguar automatically connects to Wifi when it starts up,\nwe need to tell Jaguar to disable Wifi when running the programs.\nYou can do this by `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `jag run`), ` with `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `-Djag.wifi=false`), `. This disables\nWifi while the given program is running. To make sure that the device is\nreachable, Jaguar sets a timeout of 10 seconds, after which the program\nis killed and Wifi is re-enabled. If you need more time, you can also\npass the `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `-Djag.timeout=<duration>`), ` option. For example, to run a\nprogram for 60 seconds, you can use `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `-Djag.timeout=1m`), `.`), mdx(\"p\", null, `A complete command line could look like this:`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-shell\"\n  }, `jag run -Djag.wifi=false -Djag.timeout=1m sender.toit\n`)), mdx(\"h2\", {\n    \"id\": \"broadcasting\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#broadcasting\",\n    \"aria-label\": \"broadcasting permalink\",\n    \"className\": \"table-of-contents-icon before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), `Broadcasting`), mdx(\"p\", null, `In this example we will set up one device to send broadcast messages\nand another device to receive them.`), mdx(\"h3\", {\n    \"id\": \"sender\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#sender\",\n    \"aria-label\": \"sender permalink\",\n    \"className\": \"table-of-contents-icon before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), `Sender`), mdx(\"p\", null, `Create a new file `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `sender.toit`), ` and put the following code into it:`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-toit\"\n  }, `import esp32.espnow\n\nmain:\n  service := espnow.Service\n  service.add-peer espnow.BROADCAST-ADDRESS\n\n  counter := 0\n  while true:\n    message := \"hello $counter\"\n    service.send message\n        --address=espnow.BROADCAST-ADDRESS\n    print \"Sent datagram.\"\n    counter++\n    sleep --ms=1000\n`)), mdx(\"p\", null, `The program starts by creating a service, followed by adding a new peer.\nWe are using the broadcast address, thus communicating with all peers in\nrange. ESP-NOW can only send data to peers that have been added to the peer\nlist. This includes the broadcast address, which is just a special address\nthat represents all devices in range.`), mdx(\"p\", null, `The program then simply sends a message every second.`), mdx(\"p\", null, `Since no key was specified, the messages are sent unencrypted.`), mdx(\"p\", null, `You can run the program using:`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-shell\"\n  }, `jag run -Djag.wifi=false sender.toit\n`)), mdx(\"p\", null, `Remember that Jaguar will kill the program after 10 seconds unless you\nspecify a longer timeout using `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `-Djag.timeout=<duration>`), `.`), mdx(\"h3\", {\n    \"id\": \"receiver\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#receiver\",\n    \"aria-label\": \"receiver permalink\",\n    \"className\": \"table-of-contents-icon before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), `Receiver`), mdx(\"p\", null, `Create a new file `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `receiver.toit`), ` and put the following code into it:`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-toit\"\n  }, `import esp32.espnow\n\nmain:\n  service := espnow.Service\n\n  while true:\n    message := service.receive\n    sender := message.address\n    data := message.data.to-string\n    print \"Received datagram from $sender: $data\"\n`)), mdx(\"p\", null, `This program also starts by creating an ESP-NOW service.\nIt then enters an infinite loop where it waits for messages to arrive.\nWhen a message is received, it prints the sender's address and the\nmessage data.`), mdx(\"h3\", {\n    \"id\": \"running-the-programs\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#running-the-programs\",\n    \"aria-label\": \"running the programs permalink\",\n    \"className\": \"table-of-contents-icon before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), `Running the programs`), mdx(\"p\", null, `Typically, you have 4 terminal windows open:`), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, `jag monitor --port /dev/ttyUSB0`), ` to monitor the sender.`), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, `jag monitor --port /dev/ttyUSB1`), ` to monitor the receiver.`), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, `jag run -d <name-of-sender> -Djag.wifi=false sender.toit`), ` to run the sender.`), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, `jag run -d <name-of-receiver> -Djag.wifi=false receiver.toit`), ` to run the receiver.`)), mdx(\"h2\", {\n    \"id\": \"direct-communication\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#direct-communication\",\n    \"aria-label\": \"direct communication permalink\",\n    \"className\": \"table-of-contents-icon before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), `Direct communication`), mdx(\"p\", null, `Instead of broadcasting messages, devices can also send messages\ndirectly to each other using their MAC address. We will also\nuse keys to encrypt the messages in this example.`), mdx(\"h3\", {\n    \"id\": \"sender-1\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#sender-1\",\n    \"aria-label\": \"sender 1 permalink\",\n    \"className\": \"table-of-contents-icon before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), `Sender`), mdx(\"p\", null, `Create a new file `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `sender-direct.toit`), ` and put the following code into it:`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-toit\"\n  }, `import esp32.espnow\n\nPEER ::= espnow.Address.parse \"c4:dd:57:5b:f5:3c\"\n\nPMK ::= espnow.Key.from-string \"pmk1234567890123\"\nLMK ::= espnow.Key.from-string \"lmk1234567890123\"\n\nmain:\n  service := espnow.Service --key=PMK\n  service.add-peer PEER --key=LMK\n\n  counter := 0\n  while true:\n    message := \"hello $counter\"\n    service.send message --address=PEER\n    print \"Sent datagram.\"\n    counter++\n    sleep --ms=1000\n`)), mdx(\"p\", null, `Since we are sending messages directly to a specific device, we need to\nadd the device as a peer using its MAC address. You need to replace the\naddress in the code above with the actual address of your receiver device.\nIf you ran the previous broadcast example, you already have the address\nof the receiver. You can just run the same program with roles reversed to\nget the address of the sender.`), mdx(\"p\", null, `ESP-NOW uses two types of keys: a primary key (PMK) and a local\nkey (LMK). The PMK is used to encrypt the LMKs and is shared between\nall devices. The LMK is used to encrypt the actual messages and is\nspecific to paired devices. If no LMK is used, then the communication is\nunencrypted, even if one or both devices have a PMK.`), mdx(\"p\", null, `If a communication is encrypted, then the receiver also must add the\nsender as a peer, so it can specify the LMK to decrypt the messages.`), mdx(\"p\", null, `Before starting the program, we need to start the receiver. This is\nbecause ESP-NOW senders require the receivers of direct connections\nto be online. Otherwise, an exception is thrown. Note, however,\nthat the absence of an exception does not guarantee that the message\nwas handled by the receiver.`), mdx(\"h3\", {\n    \"id\": \"receiver-1\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#receiver-1\",\n    \"aria-label\": \"receiver 1 permalink\",\n    \"className\": \"table-of-contents-icon before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), `Receiver`), mdx(\"p\", null, `Create a new file `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `receiver-direct.toit`), ` and put the following code into it:`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-toit\"\n  }, `import esp32.espnow\n\nPEER ::= espnow.Address.parse \"c4:dd:57:5b:f3:a8\"\n\nPMK ::= espnow.Key.from-string \"pmk1234567890123\"\nLMK ::= espnow.Key.from-string \"lmk1234567890124\"\n\nmain:\n  service := espnow.Service --key=PMK\n  service.add-peer PEER --key=LMK\n\n  while true:\n    message := service.receive\n    sender := message.address\n    data := message.data.to-string\n    print \"Received datagram from $sender: $data\"\n`)), mdx(\"p\", null, `As before, we need to add the keys to encrypt the connection.\nSince we are using a LMK, we also need to add the sender as a peer.\nThe rest of the program is unchanged.`), mdx(\"h3\", {\n    \"id\": \"running-the-programs-1\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#running-the-programs-1\",\n    \"aria-label\": \"running the programs 1 permalink\",\n    \"className\": \"table-of-contents-icon before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), `Running the programs`), mdx(\"p\", null, `Make sure to start the receiver first, and then the sender. Typically,\nyou have 4 terminal windows open:`), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, `jag monitor --port /dev/ttyUSB0`), ` to monitor the sender.`), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, `jag monitor --port /dev/ttyUSB1`), ` to monitor the receiver.`), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, `jag run -d <name-of-receiver> -Djag.wifi=false receiver-direct.toit`), ` to run the receiver.`), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, `jag run -d <name-of-sender> -Djag.wifi=false sender-direct.toit`), ` to run the sender.`)), mdx(\"h2\", {\n    \"id\": \"data-rates\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#data-rates\",\n    \"aria-label\": \"data rates permalink\",\n    \"className\": \"table-of-contents-icon before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), `Data rates`), mdx(\"p\", null, `ESP-NOW supports different data rates. Slower rates typically have\na better range, while faster rates have a shorter range.`), mdx(\"p\", null, `The default configuration of ESP-NOW is set to use `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `RATE-1M-L`), `,\ncorresponding to 1 Mbps with a long preamble. There are some faster\nmodes available (like\n`, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://libs.toit.io/esp32/espnow/library-summary#RATE-48M\"\n  }, `RATE-48M`), `),\nor you can use a lower rate (like\n`, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://libs.toit.io/esp32/espnow/library-summary#RATE-LORA-250K\"\n  }, `RATE-LORA-250K`), `)\nwhich has a longer range.`));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#esp-now","title":"ESP-NOW","items":[{"url":"#prerequisites","title":"Prerequisites"},{"url":"#introduction","title":"Introduction"},{"url":"#limitations","title":"Limitations"},{"url":"#broadcasting","title":"Broadcasting","items":[{"url":"#sender","title":"Sender"},{"url":"#receiver","title":"Receiver"},{"url":"#running-the-programs","title":"Running the programs"}]},{"url":"#direct-communication","title":"Direct communication","items":[{"url":"#sender-1","title":"Sender"},{"url":"#receiver-1","title":"Receiver"},{"url":"#running-the-programs-1","title":"Running the programs"}]},{"url":"#data-rates","title":"Data rates"}]}]}}},"pageContext":{"title":"ESP-NOW","id":"ad9acacd-b23a-5148-93e6-8bbb75eb4ca0"}},
    "staticQueryHashes": ["2197327828"]}