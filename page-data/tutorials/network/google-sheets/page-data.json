{
    "componentChunkName": "component---src-components-layout-mdx-layout-tsx",
    "path": "/tutorials/network/google-sheets",
    "result": {"data":{"site":{"siteMetadata":{"title":"Toit documentation"}},"mdx":{"body":"const _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nconst _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  let {\n    components\n  } = _ref,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"log-data-to-google-spreadsheets\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h1\",\n    \"href\": \"#log-data-to-google-spreadsheets\",\n    \"aria-label\": \"log data to google spreadsheets permalink\",\n    \"className\": \"table-of-contents-icon before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), `Log data to Google spreadsheets`), mdx(\"p\", null, `In this tutorial we will show how to send data from an ESP32 to a Google\nSpreadsheet.`), mdx(\"h2\", {\n    \"id\": \"prerequisites\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#prerequisites\",\n    \"aria-label\": \"prerequisites permalink\",\n    \"className\": \"table-of-contents-icon before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), `Prerequisites`), mdx(\"p\", null, `We assume that you have set up your development environment as described\nin `, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../../setup/ide\"\n  }, `the IDE tutorial`), `.`), mdx(\"p\", null, `We also assume that you have flashed your device with Jaguar and that\nyou are familiar with running Toit programs on it.\nIf not, have a look at the `, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../../setup/firstprogram\"\n  }, `Hello world`), ` tutorial.`), mdx(\"p\", null, `Note that you can do this tutorial without a device. In that case,\nyou need to use the `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `-d host`), ` option whenever you invoke\n`, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `jag run`), `. The program will then run on your computer instead of on\na device.`), mdx(\"p\", null, `You will need a Google account to do this tutorial.`), mdx(\"h2\", {\n    \"id\": \"prepare-the-google-spreadsheet\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#prepare-the-google-spreadsheet\",\n    \"aria-label\": \"prepare the google spreadsheet permalink\",\n    \"className\": \"table-of-contents-icon before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), `Prepare the Google spreadsheet`), mdx(\"p\", null, `First, we need to create a Google spreadsheet to log the data to. We\nwill prepare the sheet to log timestamps, temperature and humidity. If\nyou want to log other data, you can of course change this.`), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, `Go to `, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://docs.google.com/spreadsheets/\"\n  }, `Google Sheets`), `.`), mdx(\"li\", {\n    parentName: \"ol\"\n  }, `Click on the `, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, `+`), ` button to create a new spreadsheet.`), mdx(\"li\", {\n    parentName: \"ol\"\n  }, `Name the spreadsheet `, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, `ESP32 data`), `.`), mdx(\"li\", {\n    parentName: \"ol\"\n  }, `In the first row, enter the following column headers:\n`, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, `Timestamp`), `, `, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, `Temperature`), `, `, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, `Humidity`), `.`), mdx(\"li\", {\n    parentName: \"ol\"\n  }, `Open the `, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, `Extensions`), ` menu and select `, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, `Apps Script`), `.`), mdx(\"li\", {\n    parentName: \"ol\"\n  }, `Give the project a name, for example `, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, `ESP32 data logger`), `.`), mdx(\"li\", {\n    parentName: \"ol\"\n  }, `In the editor that opens, replace the default code with the following:`, mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-javascript\"\n  }, `/*\nOnlyCurrentDoc\n*/\nfunction doPost(e) {\n  var sheet = SpreadsheetApp.getActiveSheet();\n  var data = JSON.parse(e.postData.contents);\n  sheet.appendRow([new Date(data.timestamp), data.temperature, data.humidity]);\n  return ContentService.createTextOutput(\"OK\");\n}\n`))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, `Optionally add the following `, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, `doGet`), ` function. This will allow you to\ntest the script with a browser.`, mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-javascript\"\n  }, `function doGet(e) {\n  var sheet = SpreadsheetApp.getActiveSheet();\n  var data = JSON.parse(e.parameter.data);\n  sheet.appendRow([new Date(data.timestamp), data.temperature, data.humidity]);\n  return ContentService.createTextOutput(\"OK\");\n}\n`))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, `Save the project.`), mdx(\"li\", {\n    parentName: \"ol\"\n  }, `Click on the `, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, `Deploy`), ` button and select `, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, `New deployment`), `.`), mdx(\"li\", {\n    parentName: \"ol\"\n  }, `Select `, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, `Web app`), ` under \"Select type\".`), mdx(\"li\", {\n    parentName: \"ol\"\n  }, `Optionally add a description, for example \"Initial deployment\".`), mdx(\"li\", {\n    parentName: \"ol\"\n  }, `Under \"Who has access to the app\", select \\`Anyone\".`), mdx(\"li\", {\n    parentName: \"ol\"\n  }, `Click on the `, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, `Deploy`), ` button.`), mdx(\"li\", {\n    parentName: \"ol\"\n  }, `Authorize the app to access your Google account.`), mdx(\"li\", {\n    parentName: \"ol\"\n  }, `Copy the URL that is displayed in the dialog.`), mdx(\"li\", {\n    parentName: \"ol\"\n  }, `Click on the `, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, `OK`), ` button to close the dialog.`)), mdx(\"p\", null, `If you ever lose the URL, you can find it again by opening the\n`, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `Manage Deployments`), ` dialog. To do this, click on the `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `Deploy`), ` button and\nselect `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `Manage deployments`), `. The URL is displayed in the dialog.`), mdx(\"h3\", {\n    \"id\": \"testing-the-script-with-the-browser\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#testing-the-script-with-the-browser\",\n    \"aria-label\": \"testing the script with the browser permalink\",\n    \"className\": \"table-of-contents-icon before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), `Testing the script with the browser`), mdx(\"p\", null, `If you added the `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `doGet`), ` function, you can test your Google spreadsheet\nsetup with a browser.`), mdx(\"p\", null, `Take the URL you received in the previous section and append the following to it:`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-text\"\n  }, `?data={\"timestamp\":123456789,\"temperature\":25.0,\"humidity\":50.0}\n`)), mdx(\"p\", null, `The complete URL should now look like this:`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-text\"\n  }, `https://script.google.com/macros/s/<SOME_ID>/exec?data={\"timestamp\":123456789,\"temperature\":25.0,\"humidity\":50.0}\n`)), mdx(\"p\", null, `Open this URL in your browser. You should see the text `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `OK`), ` displayed, and the\ndata should be added to the spreadsheet.`), mdx(\"p\", null, `You can simply delete the row from the spreadsheet to remove the data.`), mdx(\"h2\", {\n    \"id\": \"toit-program\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#toit-program\",\n    \"aria-label\": \"toit program permalink\",\n    \"className\": \"table-of-contents-icon before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), `Toit program`), mdx(\"p\", null, `Now that we have a spreadsheet to log the data to, we can write the Toit\nprogram that will send the data to it.`), mdx(\"h3\", {\n    \"id\": \"packages\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#packages\",\n    \"aria-label\": \"packages permalink\",\n    \"className\": \"table-of-contents-icon before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), `Packages`), mdx(\"p\", null, `The HTTP functionality is not part of the core libraries and must be\nimported as a package. See the `, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../../setup/packages\"\n  }, `packages`), `\ntutorial for details.`), mdx(\"p\", null, `We are using the `, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://pkg.toit.io/package/github.com%2Ftoitlang%2Fpkg-http@v2\"\n  }, `http`), `\npackage. To install it, run the following command:`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-shell\"\n  }, `jag pkg install github.com/toitlang/pkg-http@v2\n`)), mdx(\"p\", null, `We will also use the\n`, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://pkg.toit.io/package/github.com%2Ftoitware%2Ftoit-cert-roots@v1\"\n  }, `certificate-roots`), `\npackage:`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-shell\"\n  }, `jag pkg install github.com/toitware/toit-cert-roots@v1\n`)), mdx(\"h3\", {\n    \"id\": \"code\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#code\",\n    \"aria-label\": \"code permalink\",\n    \"className\": \"table-of-contents-icon before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), `Code`), mdx(\"p\", null, `Start a new Toit program `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `sheets.toit`), ` and watch it with Jaguar.`), mdx(\"p\", null, `Don't forget to replace `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `<YOUR URL>`), ` with the URL you received from\nGoogle.`), mdx(\"p\", null, `The program uses the `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `post-json`), ` method on the HTTP `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `Client`), ` class to\nsend the data to the spreadsheet. The `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `post-json`), ` method will\nautomatically encode the data as JSON and set the `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `Content-Type`), ` header\nto `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `application/json`), `.`), mdx(\"p\", null, `The `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `--no-follow-redirects`), ` option is used to prevent the HTTP client\nfrom following any redirects. The Google Apps Script returns a\nredirect to a different site. That site is known to have a very big\ncertificate that might not fit into memory. By not following the\nredirect we avoid potential issues with the page and also avoid\nanother HTTP request.`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-toit\"\n  }, `import certificate-roots\nimport http\nimport net\n\nURL ::= \"<YOUR URL>\"\n\nmain:\n  certificate-roots.install-common-trusted-roots\n  network := net.open\n  client := http.Client.tls network\n\n  response := client.post-json --no-follow-redirects --uri=URL {\n    \"timestamp\": Time.now.utc.to-iso8601-string,\n    \"temperature\": 42.0,\n    \"humidity\": 1013.25,\n  }\n\n  if response.status-code != 200 and response.status-code != 302:\n    print \"Request failed: $response.status-code $response.status-message\"\n\n  response.drain\n`)), mdx(\"p\", null, `For simplicity we simply post some dummy data to the spreadsheet. In a real\napplication you would replace this with the actual data you want to log.`), mdx(\"h4\", {\n    \"id\": \"timestamp\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h4\",\n    \"href\": \"#timestamp\",\n    \"aria-label\": \"timestamp permalink\",\n    \"className\": \"table-of-contents-icon before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), `Timestamp`), mdx(\"p\", null, `If your ESP32 hasn't synchronized with an NTP server, the timestamp will be\nincorrect (somewhere in the 1970s). See the\n`, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../../misc/date-time\"\n  }, `date-time tutorial`), ` for details on how to synchronize\nthe time.`));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#log-data-to-google-spreadsheets","title":"Log data to Google spreadsheets","items":[{"url":"#prerequisites","title":"Prerequisites"},{"url":"#prepare-the-google-spreadsheet","title":"Prepare the Google spreadsheet","items":[{"url":"#testing-the-script-with-the-browser","title":"Testing the script with the browser"}]},{"url":"#toit-program","title":"Toit program","items":[{"url":"#packages","title":"Packages"},{"url":"#code","title":"Code","items":[{"url":"#timestamp","title":"Timestamp"}]}]}]}]}}},"pageContext":{"title":"Log data to Google spreadsheets","id":"ba798440-e795-550a-97bd-d536976d38f6"}},
    "staticQueryHashes": ["2197327828"]}