{
    "componentChunkName": "component---src-components-layout-mdx-layout-tsx",
    "path": "/tutorials/network/http",
    "result": {"data":{"site":{"siteMetadata":{"title":"Toit documentation"}},"mdx":{"body":"const _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nconst _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  let {\n    components\n  } = _ref,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"http\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h1\",\n    \"href\": \"#http\",\n    \"aria-label\": \"http permalink\",\n    \"className\": \"table-of-contents-icon before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), `HTTP`), mdx(\"p\", null, `The ESP32 comes with integrated WiFi and Bluetooth. In this tutorial\nwe are going to take advantage of the WiFi and do an HTTP GET request\nto get interesting facts.`), mdx(\"h2\", {\n    \"id\": \"prerequisites\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#prerequisites\",\n    \"aria-label\": \"prerequisites permalink\",\n    \"className\": \"table-of-contents-icon before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), `Prerequisites`), mdx(\"p\", null, `We assume that you have set up your development environment as described\nin `, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../../setup/ide\"\n  }, `the IDE tutorial`), `.`), mdx(\"p\", null, `We also assume that you have flashed your device with Jaguar and that\nyou are familiar with running Toit programs on it.\nIf not, have a look at the `, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../../setup/firstprogram\"\n  }, `Hello world`), ` tutorial.`), mdx(\"p\", null, `Note that you can do this tutorial without a device. In that case,\nyou need to use the `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `-d host`), ` option whenever you invoke\n`, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `jag run`), `. The program will then run on your computer instead of on\na device.`), mdx(\"h2\", {\n    \"id\": \"packages\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#packages\",\n    \"aria-label\": \"packages permalink\",\n    \"className\": \"table-of-contents-icon before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), `Packages`), mdx(\"p\", null, `The HTTP functionality is not part of the core libraries and must be\nimported as a package. See the `, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../../setup/packages\"\n  }, `packages`), `\ntutorial for details.`), mdx(\"p\", null, `We are using the `, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://pkg.toit.io/package/github.com%2Ftoitlang%2Fpkg-http@v2\"\n  }, `http`), `\npackage. To install it, run the following command:`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-shell\"\n  }, `jag pkg install github.com/toitlang/pkg-http@v2\n`)), mdx(\"p\", null, `We will also use the\n`, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://pkg.toit.io/package/github.com%2Ftoitware%2Ftoit-cert-roots@v1\"\n  }, `certificate-roots`), `\npackage:`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-shell\"\n  }, `jag pkg install github.com/toitware/toit-cert-roots@v1\n`)), mdx(\"h2\", {\n    \"id\": \"code\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#code\",\n    \"aria-label\": \"code permalink\",\n    \"className\": \"table-of-contents-icon before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), `Code`), mdx(\"p\", null, `Start a new Toit program `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `http_get.toit`), ` and watch it with Jaguar.`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-toit\"\n  }, `import http\nimport net\nimport certificate-roots\nimport encoding.json\n\nURL ::= \"uselessfacts.jsph.pl\"\nPATH ::= \"/random.json?language=en\"\n\nmain:\n  certificate-roots.install-common-trusted-roots\n\n  network := net.open\n  client := http.Client.tls network\n\n  request := client.get URL PATH\n  decoded := json.decode-stream request.body\n  print decoded[\"text\"]\n`)), mdx(\"p\", null, `Doing an HTTP GET is straightforward and consists of calling\n`, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `get`), ` on an HTTP client object.`), mdx(\"p\", null, `However, things are complicated by two facts:`), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, `we need to use the HTTPS connection, and`), mdx(\"li\", {\n    parentName: \"ul\"\n  }, `the returned data is given as a byte-array and must be decoded.`)), mdx(\"p\", null, `In order to verify the authenticity of the https server we need\nto have the certificate of the authenticity that signed the server's\nown certificate. For simplicity we just install the \"common trusted roots\"\nof the `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `certificate-roots`), ` package. This is a set of root certificates\nthat cover the majority of the internet.`), mdx(\"p\", null, `In the case of `, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://uselessfacts.jsph.pl\"\n  }, `https://uselessfacts.jsph.pl`), ` the root\nauthority is \"ISRG Root X1\". This information can be extracted by\nlooking at the site's certificate in Chrome:`), mdx(\"img\", {\n    src: HttpCertificateScreen,\n    alt: \"Certificate information in Chrome\"\n  }), mdx(\"p\", null, `The `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `certificate-roots`), ` package is maintained by Toitware and includes roots\nthat are shipped with Mozilla's Firefox and should thus be safe to use.`), mdx(\"p\", null, `Decoding the given data as JSON is straightforward with the `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `decode-stream`), `\nfunctionality of the `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `json`), ` library (imported with `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `encoding.json`), `).\nThe server is supposed to return an array of exactly one string item.\nAs such the output of this program could look something like:`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-text\"\n  }, `[jaguar] INFO: starting program 6a63204c-1c98-519d-bdaa-90e52b491fb4\nUntil 1994, world maps and globes sold in Albania only had Albania on them.\n`)), mdx(\"h2\", {\n    \"id\": \"exercises\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#exercises\",\n    \"aria-label\": \"exercises permalink\",\n    \"className\": \"table-of-contents-icon before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), `Exercises`), mdx(\"p\", null, `It's almost impossible to damage the ESP32 without connecting\nhardware to it.`), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, `Fetch different interesting data. The repository\n`, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/public-apis-dev/public-apis\"\n  }, `https://github.com/public-apis-dev/public-apis`), ` has lots of public\nservices that could be used for this purpose.`), mdx(\"li\", {\n    parentName: \"ul\"\n  }, `Show the data on a `, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"../../hardware/sd1306\"\n  }, `display`), `.`), mdx(\"li\", {\n    parentName: \"ul\"\n  }, `Use a `, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"../../hardware/button\"\n  }, `button`), ` to fetch a new fact every\ntime the button is pressed.`)));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#http","title":"HTTP","items":[{"url":"#prerequisites","title":"Prerequisites"},{"url":"#packages","title":"Packages"},{"url":"#code","title":"Code"},{"url":"#exercises","title":"Exercises"}]}]}}},"pageContext":{"title":"HTTP","id":"f80c1c46-3b64-59f6-b51e-a1e7c785de89"}},
    "staticQueryHashes": ["2197327828"]}