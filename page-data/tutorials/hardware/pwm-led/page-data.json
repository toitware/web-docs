{
    "componentChunkName": "component---src-components-layout-mdx-layout-tsx",
    "path": "/tutorials/hardware/pwm-led",
    "result": {"data":{"site":{"siteMetadata":{"title":"Toit documentation"}},"mdx":{"body":"const _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nconst _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  let {\n    components\n  } = _ref,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"fading-light\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h1\",\n    \"href\": \"#fading-light\",\n    \"aria-label\": \"fading light permalink\",\n    \"className\": \"table-of-contents-icon before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), `Fading light`), mdx(\"p\", null, `In this tutorial we will change the brightness of an LED using\nPulse Width Modulation (PWM).`), mdx(\"h2\", {\n    \"id\": \"prerequisites\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#prerequisites\",\n    \"aria-label\": \"prerequisites permalink\",\n    \"className\": \"table-of-contents-icon before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), `Prerequisites`), mdx(\"p\", null, `This tutorial assumes that you know how to control a single LED.\nIf necessary, have a look at the `, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../led\"\n  }, `single LED tutorial`), ` first.`), mdx(\"h2\", {\n    \"id\": \"setup\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#setup\",\n    \"aria-label\": \"setup permalink\",\n    \"className\": \"table-of-contents-icon before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), `Setup`), mdx(\"p\", null, `The setup for this tutorial is identical to the one from the `, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../led\"\n  }, `single LED tutorial`), `.`), mdx(\"img\", {\n    src: LedDiagram,\n    alt: \"LED diagram\"\n  }), mdx(\"img\", {\n    src: LedSchematics,\n    alt: \"LED schematics\"\n  }), mdx(\"h2\", {\n    \"id\": \"code\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#code\",\n    \"aria-label\": \"code permalink\",\n    \"className\": \"table-of-contents-icon before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), `Code`), mdx(\"p\", null, `As seen earlier, we can turn a single LED using `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `pin.set`), `.`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-toit\"\n  }, `import gpio\n\nmain:\n  led := gpio.Pin 32 --output\n  led.set 1\n  sleep --ms=10_000\n  led.close\n`)), mdx(\"p\", null, `This example turns on the LED for 10 seconds, before stopping the program\n(and automatically turning off the LED again).`), mdx(\"p\", null, `Save it as `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `pwm_led.toit`), ` and let `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `jag`), ` watch it.`), mdx(\"p\", null, `The intuitive way of changing the brightness would be to change the current\nthat goes through the LED. Replacing the resistor with a higher one would do\nthat. (You can put two or three resistors in series if you want to try that).`), mdx(\"p\", null, `From a programming point-of-view that's not a practical solution, though.\nInstead we are going to exploit the fact that human eyes can't see changes\nthat happen too quickly. We are going to turn the LED on and off so fast\nthat the eye won't notice it anymore.`), mdx(\"p\", null, `By playing with the proportions of on/off times we can change the perceived\nbrightness of the LED.`), mdx(\"p\", null, `Let's start by trying to do this by hand:`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-toit\"\n  }, `import gpio\n\nmain:\n  led := gpio.Pin 32 --output\n  while true:\n    led.set 1\n    sleep --ms=1\n    led.set 0\n    sleep --ms=1\n`)), mdx(\"p\", null, `Here we are trying to turn on the light for 1 millisecond, and then turning\nit off for 1 millisecond again. Unfortunately, the result isn't perfect. While\nthe LED does look a bit less bright, we can definitely see some flickering\nhappening.`), mdx(\"p\", null, `Clearly, the sleep calls aren't just taking 1 millisecond, as the human eye\nwould not be able to detect such a high frequency.`), mdx(\"p\", null, `The reason is simple: the Toit virtual machine isn't fast enough to run the\nprogram at the speed we ask it to. Also, running in such a tight loop would\nwaste a lot of CPU resources that could be used for other things.`), mdx(\"p\", null, `Since such a feature is extremely common, the ESP32 has a hardware peripheral\nthat does the job for us. It's called PWM (pulse-width modulation).\nA PWM signal is just a square wave where the relative width of the high\nand low bits are changed depending on the duty cycle.`), mdx(\"img\", {\n    src: PwmWiki,\n    alt: \"Pulse-width modulation\"\n  }), \"https://en.wikipedia.org/wiki/Pulse-width_modulation#/media/File:Duty_Cycle_Examples.png. \\xA9 Thewrightstuff CC BY-SA 4.0\", mdx(\"p\", null, `The ESP32 hardware functionality does all of this for us. We only need to specify\nthe frequency and the duty cycle, and it will emit the needed square wave.`), mdx(\"p\", null, `Here is the program that uses the PWM peripheral:`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-toit\"\n  }, `import gpio\nimport gpio.pwm\n\nmain:\n  led := gpio.Pin 32\n  generator := pwm.Pwm --frequency=400\n  channel := generator.start led\n  channel.set-duty-factor 0.5\n  sleep --ms=10_000\n  channel.close\n  generator.close\n  led.close\n`)), mdx(\"p\", null, `A third of the code is just closing the resources we use (all the `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `close`), `\ncalls). The more interesting lines are in the beginning:`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, `  generator := pwm.Pwm --frequency=400\n  channel := generator.start led\n  channel.set-duty-factor 0.5\n`)), mdx(\"p\", null, `We start by creating a square-wave generator of a certain frequency. Then we\nuse the generator to apply a square wave on the LED pin. Finally, we set the\nduty factor of the channel we just created.`), mdx(\"p\", null, `We can now play with the duty factor:`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-toit\"\n  }, `import gpio\nimport gpio.pwm\n\nmain:\n  led := gpio.Pin 32\n  generator := pwm.Pwm --frequency=400\n  channel := generator.start led\n  duty-percent := 0\n  step := 1\n  while true:\n    channel.set-duty-factor duty-percent/100.0\n    duty-percent += step\n    if duty-percent == 0 or duty-percent == 100:\n      step = -step\n    sleep --ms=10\n`)), mdx(\"p\", null, `Here we increase the duty percentage by 1% at every iteration. Once value\nhits 100, we reverse the step-direction and decrease it again. The end-result\nis an LED that fades in and out continuously.`), mdx(\"h2\", {\n    \"id\": \"exercises\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#exercises\",\n    \"aria-label\": \"exercises permalink\",\n    \"className\": \"table-of-contents-icon before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), `Exercises`), mdx(\"p\", null, `As long as the connections were done correctly you can't damage your hardware\nby changing your program.`), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, `Change the speed of the fading in and out.`), mdx(\"li\", {\n    parentName: \"ul\"\n  }, `Change the base-frequency to 40. Can you detect the flickering?`), mdx(\"li\", {\n    parentName: \"ul\"\n  }, `Connect more LEDs and use the generator to control more than one LED.\nThe individual LEDs should all have their own channel with different duty factors.`)));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#fading-light","title":"Fading light","items":[{"url":"#prerequisites","title":"Prerequisites"},{"url":"#setup","title":"Setup"},{"url":"#code","title":"Code"},{"url":"#exercises","title":"Exercises"}]}]}}},"pageContext":{"title":"Fading light","id":"d7edd132-a27e-501d-952c-17b8d31b1c69"}},
    "staticQueryHashes": ["2197327828"]}