{
    "componentChunkName": "component---src-components-layout-mdx-layout-tsx",
    "path": "/tutorials/hardware/adc",
    "result": {"data":{"site":{"siteMetadata":{"title":"Toit documentation"}},"mdx":{"body":"const _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nconst _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  let {\n    components\n  } = _ref,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"adc\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h1\",\n    \"href\": \"#adc\",\n    \"aria-label\": \"adc permalink\",\n    \"className\": \"table-of-contents-icon before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), `ADC`), mdx(\"p\", null, `An analog-to-digital converter (ADC) makes it possible to measure the voltage\nat a certain pin. The ESP32 features two 12-bit SAR (Successive\nApproximation Register) ADCs, supporting a total of 18 measurement\nchannels (analog enabled pins). However, the usage of ADC2 is severely\nrestricted and is therefore disabled by default. In general you should\nuse pins 32-39 (8 pins) for ADC conversion as they don't interfere with\nthe WiFi radio.`), mdx(\"h2\", {\n    \"id\": \"prerequisites\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#prerequisites\",\n    \"aria-label\": \"prerequisites permalink\",\n    \"className\": \"table-of-contents-icon before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), `Prerequisites`), mdx(\"p\", null, `We assume that you have set up your development environment as described\nin `, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../../setup/ide\"\n  }, `the IDE tutorial`), `.`), mdx(\"p\", null, `We also assume that you have flashed your device with Jaguar and that\nyou are familiar with running Toit programs on it.\nIf not, have a look at the `, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../../setup/firstprogram\"\n  }, `Hello world`), ` tutorial.`), mdx(\"p\", null, `While not necessary, we recommend to have done the digital GPIO tutorials\n`, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../led\"\n  }, `LED`), ` and `, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../button\"\n  }, `Button`), ` before this one.`), mdx(\"h2\", {\n    \"id\": \"setup\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#setup\",\n    \"aria-label\": \"setup permalink\",\n    \"className\": \"table-of-contents-icon before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), `Setup`), mdx(\"p\", null, `We are using pin 34 for this tutorial. Pin 34 is input only, which\nworks well for the ADC.`), mdx(\"p\", null, `Our first setup implements a typical voltage divider. We connect a\nresistor to 3V3, and another resistor to GND. The two resistors are\nconnected in series. The voltage between the two resistors is measured\nby the ADC.`), mdx(\"p\", null, `Note that we use 330Î© resistors. This is a very low value, but it\nis likely that you have these resistors in your kit. If you have\nhigher value resistors, you can use them instead. The higher the\nresistance, the lower the current, and the less power is wasted as heat.`), mdx(\"img\", {\n    src: AdcDiagram,\n    alt: \"Wiring diagram for a voltage divider\"\n  }), mdx(\"img\", {\n    src: AdcSchematics,\n    alt: \"Schematics for a voltage divider\"\n  }), mdx(\"h2\", {\n    \"id\": \"code\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#code\",\n    \"aria-label\": \"code permalink\",\n    \"className\": \"table-of-contents-icon before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), `Code`), mdx(\"p\", null, `A voltage divider is a simple circuit that divides the voltage using\ntwo resistors. If you have two resistors of the same value, the voltage\nbetween the two resistors will be half of the voltage between the\nend of the first resistor and the end of the second resistor. In our\ncase the voltage between the two resistors should be 1.65V.`), mdx(\"p\", null, `Let's test this. Write (and Jaguar-`, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `watch`), `) the following program:`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-toit\"\n  }, `import gpio\nimport gpio.adc\n\nmain:\n  pin := gpio.Pin 34\n  adc := adc.Adc pin\n  256.repeat:\n    print adc.get\n    sleep --ms=500\n`)), mdx(\"p\", null, `This program should output 1.65V in a loop.`), mdx(\"p\", null, `You can shorten the output by using `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `print \"$(%1.3f adc.get)\"`), `. This\nuses `, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../../../language/strings#string-interpolation\"\n  }, `Toit's string interpolation`), `\nto print the value with 3 digits.`), mdx(\"h3\", {\n    \"id\": \"vcc-or-gnd\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#vcc-or-gnd\",\n    \"aria-label\": \"vcc or gnd permalink\",\n    \"className\": \"table-of-contents-icon before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), `VCC or GND`), mdx(\"p\", null, `Before using the ADC for other projects, it's often a good idea to\nmake sure that everything is still working. In that case, using\nVCC or GND as a test input is a good idea. The voltage of VCC is\n3.3V, and the voltage of GND is 0V. The ADC should be able to\nmeasure these values.`), mdx(\"p\", null, `Since the pin 34 is configured as input, it is safe to connect it\ndirectly to VCC or GND. However, you can also keep a resistor in\nbetween. That shouldn't change the measured value, but prevents\naccidentally shorting the pin to VCC or GND (if it isn't input\nas expected).`), mdx(\"p\", null, `While the loop is running (restart it if necessary), remove\nthe resistor that connects pin 34 to GND. The value should\nimmediately rise to a value close ~3.3V. Exactly, what we\nexpected.`), mdx(\"p\", null, `Reconnect the resistor and remove the cable that connects the\nresistor of 3V3 to pin 34. On my hardware the value immediately\ndrops to ~0.142V.`), mdx(\"p\", null, `This is somewhat surprising because GND should be 0V. According to\nEspressif's specification, the ADC has a precision of 12 bits\n(thus 4096 values) and ~0.14V is thus not just an imprecision.`), mdx(\"p\", null, `It turns out that the ADC is non-linear and can't really measure\nvery low and high values:\n`, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.espressif.com/projects/esp-idf/en/v4.2/esp32/api-reference/peripherals/adc.html#adc-calibration\"\n  }, `https://docs.espressif.com/projects/esp-idf/en/v4.2/esp32/api-reference/peripherals/adc.html#adc-calibration`)), mdx(\"p\", null, `Keep this in mind when using the ADC.`), mdx(\"h2\", {\n    \"id\": \"exercises\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#exercises\",\n    \"aria-label\": \"exercises permalink\",\n    \"className\": \"table-of-contents-icon before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), `Exercises`), mdx(\"p\", null, `In order not to damage the hardware:`), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, `Make sure not to measure directly the 5V pin. You can measure it's voltage\nusing a voltage divider.`), mdx(\"li\", {\n    parentName: \"ul\"\n  }, `Don't connect GND and 3V3/5V.`), mdx(\"li\", {\n    parentName: \"ul\"\n  }, `Keep pin 34 pin as input.`)), mdx(\"h3\", {\n    \"id\": \"led-voltage-drop\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#led-voltage-drop\",\n    \"aria-label\": \"led voltage drop permalink\",\n    \"className\": \"table-of-contents-icon before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), `LED voltage drop`), mdx(\"p\", null, `Measure the voltage drop of an LED. Replace the resistor that connects\npin 34 to GND with an LED. (You should have VCC -> resistor -> pin 34 -> LED -> GND).\nRemember that the short leg of the LED is the cathode (negative side) and\nshould be connected to GND.`), mdx(\"p\", null, `Typical voltage drops of red/green LEDs are between 1.6V and 2.2V. As such\nyou should measure a value in the range of 1.1V (3.3 - 2.2) to 1.7V (3.3 - 1.6).`));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#adc","title":"ADC","items":[{"url":"#prerequisites","title":"Prerequisites"},{"url":"#setup","title":"Setup"},{"url":"#code","title":"Code","items":[{"url":"#vcc-or-gnd","title":"VCC or GND"}]},{"url":"#exercises","title":"Exercises","items":[{"url":"#led-voltage-drop","title":"LED voltage drop"}]}]}]}}},"pageContext":{"title":"ADC","id":"b64e0e53-3406-581c-8aa6-8ecac4454b8a"}},
    "staticQueryHashes": ["2197327828"]}